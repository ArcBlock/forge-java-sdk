import com.squareup.javapoet.*

import javax.lang.model.element.Modifier
import java.lang.reflect.ParameterizedType
import java.lang.reflect.Type
import java.util.concurrent.TimeUnit
import java.util.function.Consumer

buildscript {
  ext.kotlin_version = '1.3.21'
  repositories {
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.21"
    classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.8'
    classpath 'com.squareup:javapoet:1.11.1'
    classpath 'de.undercouch:gradle-download-task:3.4.3'
  }
}

plugins {
  id 'java'
  id 'org.jetbrains.kotlin.jvm' version '1.3.21'
  id "de.undercouch.download" version "3.4.3"
  id 'org.jetbrains.dokka' version '0.9.18'
}


group 'io.arcblock.forge'
compileKotlin {
  kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
  kotlinOptions.jvmTarget = "1.8"
}

//plugins {
//
//}

apply plugin: 'jacoco'
apply plugin: 'maven-publish'
apply plugin: 'com.google.protobuf'

ext { springBootVersion = '2.1.4.RELEASE' }


jar {
  baseName = "core"
  version = project.file("../version").readLines().first()
}


sourceCompatibility = 1.8


sourceSets {
  main {
    kotlin { srcDir "src/main/kotlin" }
    java {
      srcDirs("src/main/java",
        "build/classes/java/main"
      )
    }
  }
  test {
    kotlin { srcDir "src/test/kotlin" }
    java { srcDir "src/test/java" }
  }
}


javadoc {
  enabled = false
}

repositories {
  jcenter()
  mavenCentral()
}

dependencies {
  api project(':core')
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
  testCompile group: 'junit', name: 'junit', version: '4.12'
}

publishing {
  repositories {
    maven {
      def releaseUrl = "s3://android-docs.arcblock.io.s3.amazonaws.com/release"
      def snapshotUrl = "s3://android-docs.arcblock.io.s3.amazonaws.com/snapshot"
      url releaseUrl

      credentials(AwsCredentials) {
        accessKey project.hasProperty("AWS_S3_ACCESSKEY") ? AWS_S3_ACCESSKEY : System.getenv("AWS_S3_ACCESSKEY")
        secretKey project.hasProperty("AWS_S3_SECRETKEY") ? AWS_S3_SECRETKEY : System.getenv("AWS_S3_SECRETKEY")
      }
    }
  }

  publications {
    mavenJava(MavenPublication) {
      groupId rootProject.group
      artifactId 'core'
      version rootProject.version
      from components.java
    }
  }

}








