// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: withdraw_tether.proto

package forge_abi;

public final class WithdrawTether {
  private WithdrawTether() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TetherTradeInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:forge_abi.TetherTradeInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.forge_abi.BigUint value = 1;</code>
     */
    boolean hasValue();
    /**
     * <code>.forge_abi.BigUint value = 1;</code>
     */
    forge_abi.Type.BigUint getValue();
    /**
     * <code>.forge_abi.BigUint value = 1;</code>
     */
    forge_abi.Type.BigUintOrBuilder getValueOrBuilder();

    /**
     * <code>repeated string assets = 2;</code>
     */
    java.util.List<java.lang.String>
        getAssetsList();
    /**
     * <code>repeated string assets = 2;</code>
     */
    int getAssetsCount();
    /**
     * <code>repeated string assets = 2;</code>
     */
    java.lang.String getAssets(int index);
    /**
     * <code>repeated string assets = 2;</code>
     */
    com.google.protobuf.ByteString
        getAssetsBytes(int index);

    /**
     * <pre>
     * The tether address
     * </pre>
     *
     * <code>string tether = 3;</code>
     */
    java.lang.String getTether();
    /**
     * <pre>
     * The tether address
     * </pre>
     *
     * <code>string tether = 3;</code>
     */
    com.google.protobuf.ByteString
        getTetherBytes();
  }
  /**
   * Protobuf type {@code forge_abi.TetherTradeInfo}
   */
  public  static final class TetherTradeInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:forge_abi.TetherTradeInfo)
      TetherTradeInfoOrBuilder {
    // Use TetherTradeInfo.newBuilder() to construct.
    private TetherTradeInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TetherTradeInfo() {
      assets_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      tether_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TetherTradeInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              forge_abi.Type.BigUint.Builder subBuilder = null;
              if (value_ != null) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(forge_abi.Type.BigUint.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                assets_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              assets_.add(s);
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              tether_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          assets_ = assets_.getUnmodifiableView();
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return forge_abi.WithdrawTether.internal_static_forge_abi_TetherTradeInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return forge_abi.WithdrawTether.internal_static_forge_abi_TetherTradeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              forge_abi.WithdrawTether.TetherTradeInfo.class, forge_abi.WithdrawTether.TetherTradeInfo.Builder.class);
    }

    private int bitField0_;
    public static final int VALUE_FIELD_NUMBER = 1;
    private forge_abi.Type.BigUint value_;
    /**
     * <code>.forge_abi.BigUint value = 1;</code>
     */
    public boolean hasValue() {
      return value_ != null;
    }
    /**
     * <code>.forge_abi.BigUint value = 1;</code>
     */
    public forge_abi.Type.BigUint getValue() {
      return value_ == null ? forge_abi.Type.BigUint.getDefaultInstance() : value_;
    }
    /**
     * <code>.forge_abi.BigUint value = 1;</code>
     */
    public forge_abi.Type.BigUintOrBuilder getValueOrBuilder() {
      return getValue();
    }

    public static final int ASSETS_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList assets_;
    /**
     * <code>repeated string assets = 2;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getAssetsList() {
      return assets_;
    }
    /**
     * <code>repeated string assets = 2;</code>
     */
    public int getAssetsCount() {
      return assets_.size();
    }
    /**
     * <code>repeated string assets = 2;</code>
     */
    public java.lang.String getAssets(int index) {
      return assets_.get(index);
    }
    /**
     * <code>repeated string assets = 2;</code>
     */
    public com.google.protobuf.ByteString
        getAssetsBytes(int index) {
      return assets_.getByteString(index);
    }

    public static final int TETHER_FIELD_NUMBER = 3;
    private volatile java.lang.Object tether_;
    /**
     * <pre>
     * The tether address
     * </pre>
     *
     * <code>string tether = 3;</code>
     */
    public java.lang.String getTether() {
      java.lang.Object ref = tether_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tether_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The tether address
     * </pre>
     *
     * <code>string tether = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTetherBytes() {
      java.lang.Object ref = tether_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tether_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (value_ != null) {
        output.writeMessage(1, getValue());
      }
      for (int i = 0; i < assets_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, assets_.getRaw(i));
      }
      if (!getTetherBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, tether_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (value_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getValue());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < assets_.size(); i++) {
          dataSize += computeStringSizeNoTag(assets_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getAssetsList().size();
      }
      if (!getTetherBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, tether_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof forge_abi.WithdrawTether.TetherTradeInfo)) {
        return super.equals(obj);
      }
      forge_abi.WithdrawTether.TetherTradeInfo other = (forge_abi.WithdrawTether.TetherTradeInfo) obj;

      boolean result = true;
      result = result && (hasValue() == other.hasValue());
      if (hasValue()) {
        result = result && getValue()
            .equals(other.getValue());
      }
      result = result && getAssetsList()
          .equals(other.getAssetsList());
      result = result && getTether()
          .equals(other.getTether());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasValue()) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValue().hashCode();
      }
      if (getAssetsCount() > 0) {
        hash = (37 * hash) + ASSETS_FIELD_NUMBER;
        hash = (53 * hash) + getAssetsList().hashCode();
      }
      hash = (37 * hash) + TETHER_FIELD_NUMBER;
      hash = (53 * hash) + getTether().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static forge_abi.WithdrawTether.TetherTradeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static forge_abi.WithdrawTether.TetherTradeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static forge_abi.WithdrawTether.TetherTradeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static forge_abi.WithdrawTether.TetherTradeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static forge_abi.WithdrawTether.TetherTradeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static forge_abi.WithdrawTether.TetherTradeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static forge_abi.WithdrawTether.TetherTradeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static forge_abi.WithdrawTether.TetherTradeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static forge_abi.WithdrawTether.TetherTradeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static forge_abi.WithdrawTether.TetherTradeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(forge_abi.WithdrawTether.TetherTradeInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code forge_abi.TetherTradeInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:forge_abi.TetherTradeInfo)
        forge_abi.WithdrawTether.TetherTradeInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return forge_abi.WithdrawTether.internal_static_forge_abi_TetherTradeInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return forge_abi.WithdrawTether.internal_static_forge_abi_TetherTradeInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                forge_abi.WithdrawTether.TetherTradeInfo.class, forge_abi.WithdrawTether.TetherTradeInfo.Builder.class);
      }

      // Construct using forge_abi.WithdrawTether.TetherTradeInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (valueBuilder_ == null) {
          value_ = null;
        } else {
          value_ = null;
          valueBuilder_ = null;
        }
        assets_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        tether_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return forge_abi.WithdrawTether.internal_static_forge_abi_TetherTradeInfo_descriptor;
      }

      public forge_abi.WithdrawTether.TetherTradeInfo getDefaultInstanceForType() {
        return forge_abi.WithdrawTether.TetherTradeInfo.getDefaultInstance();
      }

      public forge_abi.WithdrawTether.TetherTradeInfo build() {
        forge_abi.WithdrawTether.TetherTradeInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public forge_abi.WithdrawTether.TetherTradeInfo buildPartial() {
        forge_abi.WithdrawTether.TetherTradeInfo result = new forge_abi.WithdrawTether.TetherTradeInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          assets_ = assets_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.assets_ = assets_;
        result.tether_ = tether_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof forge_abi.WithdrawTether.TetherTradeInfo) {
          return mergeFrom((forge_abi.WithdrawTether.TetherTradeInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(forge_abi.WithdrawTether.TetherTradeInfo other) {
        if (other == forge_abi.WithdrawTether.TetherTradeInfo.getDefaultInstance()) return this;
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        if (!other.assets_.isEmpty()) {
          if (assets_.isEmpty()) {
            assets_ = other.assets_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureAssetsIsMutable();
            assets_.addAll(other.assets_);
          }
          onChanged();
        }
        if (!other.getTether().isEmpty()) {
          tether_ = other.tether_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        forge_abi.WithdrawTether.TetherTradeInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (forge_abi.WithdrawTether.TetherTradeInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private forge_abi.Type.BigUint value_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          forge_abi.Type.BigUint, forge_abi.Type.BigUint.Builder, forge_abi.Type.BigUintOrBuilder> valueBuilder_;
      /**
       * <code>.forge_abi.BigUint value = 1;</code>
       */
      public boolean hasValue() {
        return valueBuilder_ != null || value_ != null;
      }
      /**
       * <code>.forge_abi.BigUint value = 1;</code>
       */
      public forge_abi.Type.BigUint getValue() {
        if (valueBuilder_ == null) {
          return value_ == null ? forge_abi.Type.BigUint.getDefaultInstance() : value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>.forge_abi.BigUint value = 1;</code>
       */
      public Builder setValue(forge_abi.Type.BigUint value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.forge_abi.BigUint value = 1;</code>
       */
      public Builder setValue(
          forge_abi.Type.BigUint.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.forge_abi.BigUint value = 1;</code>
       */
      public Builder mergeValue(forge_abi.Type.BigUint value) {
        if (valueBuilder_ == null) {
          if (value_ != null) {
            value_ =
              forge_abi.Type.BigUint.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.forge_abi.BigUint value = 1;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = null;
          onChanged();
        } else {
          value_ = null;
          valueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.forge_abi.BigUint value = 1;</code>
       */
      public forge_abi.Type.BigUint.Builder getValueBuilder() {
        
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.forge_abi.BigUint value = 1;</code>
       */
      public forge_abi.Type.BigUintOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_ == null ?
              forge_abi.Type.BigUint.getDefaultInstance() : value_;
        }
      }
      /**
       * <code>.forge_abi.BigUint value = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          forge_abi.Type.BigUint, forge_abi.Type.BigUint.Builder, forge_abi.Type.BigUintOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              forge_abi.Type.BigUint, forge_abi.Type.BigUint.Builder, forge_abi.Type.BigUintOrBuilder>(
                  getValue(),
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      private com.google.protobuf.LazyStringList assets_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureAssetsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          assets_ = new com.google.protobuf.LazyStringArrayList(assets_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated string assets = 2;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getAssetsList() {
        return assets_.getUnmodifiableView();
      }
      /**
       * <code>repeated string assets = 2;</code>
       */
      public int getAssetsCount() {
        return assets_.size();
      }
      /**
       * <code>repeated string assets = 2;</code>
       */
      public java.lang.String getAssets(int index) {
        return assets_.get(index);
      }
      /**
       * <code>repeated string assets = 2;</code>
       */
      public com.google.protobuf.ByteString
          getAssetsBytes(int index) {
        return assets_.getByteString(index);
      }
      /**
       * <code>repeated string assets = 2;</code>
       */
      public Builder setAssets(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAssetsIsMutable();
        assets_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string assets = 2;</code>
       */
      public Builder addAssets(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAssetsIsMutable();
        assets_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string assets = 2;</code>
       */
      public Builder addAllAssets(
          java.lang.Iterable<java.lang.String> values) {
        ensureAssetsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, assets_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string assets = 2;</code>
       */
      public Builder clearAssets() {
        assets_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string assets = 2;</code>
       */
      public Builder addAssetsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureAssetsIsMutable();
        assets_.add(value);
        onChanged();
        return this;
      }

      private java.lang.Object tether_ = "";
      /**
       * <pre>
       * The tether address
       * </pre>
       *
       * <code>string tether = 3;</code>
       */
      public java.lang.String getTether() {
        java.lang.Object ref = tether_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          tether_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The tether address
       * </pre>
       *
       * <code>string tether = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTetherBytes() {
        java.lang.Object ref = tether_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tether_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The tether address
       * </pre>
       *
       * <code>string tether = 3;</code>
       */
      public Builder setTether(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        tether_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The tether address
       * </pre>
       *
       * <code>string tether = 3;</code>
       */
      public Builder clearTether() {
        
        tether_ = getDefaultInstance().getTether();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The tether address
       * </pre>
       *
       * <code>string tether = 3;</code>
       */
      public Builder setTetherBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        tether_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:forge_abi.TetherTradeInfo)
    }

    // @@protoc_insertion_point(class_scope:forge_abi.TetherTradeInfo)
    private static final forge_abi.WithdrawTether.TetherTradeInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new forge_abi.WithdrawTether.TetherTradeInfo();
    }

    public static forge_abi.WithdrawTether.TetherTradeInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TetherTradeInfo>
        PARSER = new com.google.protobuf.AbstractParser<TetherTradeInfo>() {
      public TetherTradeInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TetherTradeInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TetherTradeInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TetherTradeInfo> getParserForType() {
      return PARSER;
    }

    public forge_abi.WithdrawTether.TetherTradeInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WithdrawTetherTxOrBuilder extends
      // @@protoc_insertion_point(interface_extends:forge_abi.WithdrawTetherTx)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The outter transaction's fields
     * </pre>
     *
     * <code>string from = 1;</code>
     */
    java.lang.String getFrom();
    /**
     * <pre>
     * The outter transaction's fields
     * </pre>
     *
     * <code>string from = 1;</code>
     */
    com.google.protobuf.ByteString
        getFromBytes();

    /**
     * <code>uint64 nonce = 2;</code>
     */
    long getNonce();

    /**
     * <code>string chain_id = 3;</code>
     */
    java.lang.String getChainId();
    /**
     * <code>string chain_id = 3;</code>
     */
    com.google.protobuf.ByteString
        getChainIdBytes();

    /**
     * <code>bytes pk = 4;</code>
     */
    com.google.protobuf.ByteString getPk();

    /**
     * <code>bytes signature = 5;</code>
     */
    com.google.protobuf.ByteString getSignature();

    /**
     * <code>repeated .forge_abi.Multisig signatures = 6;</code>
     */
    java.util.List<forge_abi.Type.Multisig> 
        getSignaturesList();
    /**
     * <code>repeated .forge_abi.Multisig signatures = 6;</code>
     */
    forge_abi.Type.Multisig getSignatures(int index);
    /**
     * <code>repeated .forge_abi.Multisig signatures = 6;</code>
     */
    int getSignaturesCount();
    /**
     * <code>repeated .forge_abi.Multisig signatures = 6;</code>
     */
    java.util.List<? extends forge_abi.Type.MultisigOrBuilder> 
        getSignaturesOrBuilderList();
    /**
     * <code>repeated .forge_abi.Multisig signatures = 6;</code>
     */
    forge_abi.Type.MultisigOrBuilder getSignaturesOrBuilder(
        int index);

    /**
     * <pre>
     * The inner exchange tether transaction's fields
     * </pre>
     *
     * <code>.forge_abi.ExchangeInfo sender = 7;</code>
     */
    boolean hasSender();
    /**
     * <pre>
     * The inner exchange tether transaction's fields
     * </pre>
     *
     * <code>.forge_abi.ExchangeInfo sender = 7;</code>
     */
    forge_abi.Exchange.ExchangeInfo getSender();
    /**
     * <pre>
     * The inner exchange tether transaction's fields
     * </pre>
     *
     * <code>.forge_abi.ExchangeInfo sender = 7;</code>
     */
    forge_abi.Exchange.ExchangeInfoOrBuilder getSenderOrBuilder();

    /**
     * <code>.forge_abi.TetherTradeInfo receiver = 8;</code>
     */
    boolean hasReceiver();
    /**
     * <code>.forge_abi.TetherTradeInfo receiver = 8;</code>
     */
    forge_abi.WithdrawTether.TetherTradeInfo getReceiver();
    /**
     * <code>.forge_abi.TetherTradeInfo receiver = 8;</code>
     */
    forge_abi.WithdrawTether.TetherTradeInfoOrBuilder getReceiverOrBuilder();

    /**
     * <code>.google.protobuf.Timestamp expired_at = 9;</code>
     */
    boolean hasExpiredAt();
    /**
     * <code>.google.protobuf.Timestamp expired_at = 9;</code>
     */
    com.google.protobuf.Timestamp getExpiredAt();
    /**
     * <code>.google.protobuf.Timestamp expired_at = 9;</code>
     */
    com.google.protobuf.TimestampOrBuilder getExpiredAtOrBuilder();

    /**
     * <pre>
     * This is the data field of the inner exchange tether transaction
     * </pre>
     *
     * <code>.google.protobuf.Any data = 10;</code>
     */
    boolean hasData();
    /**
     * <pre>
     * This is the data field of the inner exchange tether transaction
     * </pre>
     *
     * <code>.google.protobuf.Any data = 10;</code>
     */
    com.google.protobuf.Any getData();
    /**
     * <pre>
     * This is the data field of the inner exchange tether transaction
     * </pre>
     *
     * <code>.google.protobuf.Any data = 10;</code>
     */
    com.google.protobuf.AnyOrBuilder getDataOrBuilder();
  }
  /**
   * <pre>
   * This transaction is designed to make cross-chain transaction.
   * </pre>
   *
   * Protobuf type {@code forge_abi.WithdrawTetherTx}
   */
  public  static final class WithdrawTetherTx extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:forge_abi.WithdrawTetherTx)
      WithdrawTetherTxOrBuilder {
    // Use WithdrawTetherTx.newBuilder() to construct.
    private WithdrawTetherTx(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WithdrawTetherTx() {
      from_ = "";
      nonce_ = 0L;
      chainId_ = "";
      pk_ = com.google.protobuf.ByteString.EMPTY;
      signature_ = com.google.protobuf.ByteString.EMPTY;
      signatures_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private WithdrawTetherTx(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              from_ = s;
              break;
            }
            case 16: {

              nonce_ = input.readUInt64();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              chainId_ = s;
              break;
            }
            case 34: {

              pk_ = input.readBytes();
              break;
            }
            case 42: {

              signature_ = input.readBytes();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                signatures_ = new java.util.ArrayList<forge_abi.Type.Multisig>();
                mutable_bitField0_ |= 0x00000020;
              }
              signatures_.add(
                  input.readMessage(forge_abi.Type.Multisig.parser(), extensionRegistry));
              break;
            }
            case 58: {
              forge_abi.Exchange.ExchangeInfo.Builder subBuilder = null;
              if (sender_ != null) {
                subBuilder = sender_.toBuilder();
              }
              sender_ = input.readMessage(forge_abi.Exchange.ExchangeInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sender_);
                sender_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              forge_abi.WithdrawTether.TetherTradeInfo.Builder subBuilder = null;
              if (receiver_ != null) {
                subBuilder = receiver_.toBuilder();
              }
              receiver_ = input.readMessage(forge_abi.WithdrawTether.TetherTradeInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(receiver_);
                receiver_ = subBuilder.buildPartial();
              }

              break;
            }
            case 74: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (expiredAt_ != null) {
                subBuilder = expiredAt_.toBuilder();
              }
              expiredAt_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(expiredAt_);
                expiredAt_ = subBuilder.buildPartial();
              }

              break;
            }
            case 82: {
              com.google.protobuf.Any.Builder subBuilder = null;
              if (data_ != null) {
                subBuilder = data_.toBuilder();
              }
              data_ = input.readMessage(com.google.protobuf.Any.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(data_);
                data_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          signatures_ = java.util.Collections.unmodifiableList(signatures_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return forge_abi.WithdrawTether.internal_static_forge_abi_WithdrawTetherTx_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return forge_abi.WithdrawTether.internal_static_forge_abi_WithdrawTetherTx_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              forge_abi.WithdrawTether.WithdrawTetherTx.class, forge_abi.WithdrawTether.WithdrawTetherTx.Builder.class);
    }

    private int bitField0_;
    public static final int FROM_FIELD_NUMBER = 1;
    private volatile java.lang.Object from_;
    /**
     * <pre>
     * The outter transaction's fields
     * </pre>
     *
     * <code>string from = 1;</code>
     */
    public java.lang.String getFrom() {
      java.lang.Object ref = from_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        from_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The outter transaction's fields
     * </pre>
     *
     * <code>string from = 1;</code>
     */
    public com.google.protobuf.ByteString
        getFromBytes() {
      java.lang.Object ref = from_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        from_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NONCE_FIELD_NUMBER = 2;
    private long nonce_;
    /**
     * <code>uint64 nonce = 2;</code>
     */
    public long getNonce() {
      return nonce_;
    }

    public static final int CHAIN_ID_FIELD_NUMBER = 3;
    private volatile java.lang.Object chainId_;
    /**
     * <code>string chain_id = 3;</code>
     */
    public java.lang.String getChainId() {
      java.lang.Object ref = chainId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        chainId_ = s;
        return s;
      }
    }
    /**
     * <code>string chain_id = 3;</code>
     */
    public com.google.protobuf.ByteString
        getChainIdBytes() {
      java.lang.Object ref = chainId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        chainId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PK_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString pk_;
    /**
     * <code>bytes pk = 4;</code>
     */
    public com.google.protobuf.ByteString getPk() {
      return pk_;
    }

    public static final int SIGNATURE_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString signature_;
    /**
     * <code>bytes signature = 5;</code>
     */
    public com.google.protobuf.ByteString getSignature() {
      return signature_;
    }

    public static final int SIGNATURES_FIELD_NUMBER = 6;
    private java.util.List<forge_abi.Type.Multisig> signatures_;
    /**
     * <code>repeated .forge_abi.Multisig signatures = 6;</code>
     */
    public java.util.List<forge_abi.Type.Multisig> getSignaturesList() {
      return signatures_;
    }
    /**
     * <code>repeated .forge_abi.Multisig signatures = 6;</code>
     */
    public java.util.List<? extends forge_abi.Type.MultisigOrBuilder> 
        getSignaturesOrBuilderList() {
      return signatures_;
    }
    /**
     * <code>repeated .forge_abi.Multisig signatures = 6;</code>
     */
    public int getSignaturesCount() {
      return signatures_.size();
    }
    /**
     * <code>repeated .forge_abi.Multisig signatures = 6;</code>
     */
    public forge_abi.Type.Multisig getSignatures(int index) {
      return signatures_.get(index);
    }
    /**
     * <code>repeated .forge_abi.Multisig signatures = 6;</code>
     */
    public forge_abi.Type.MultisigOrBuilder getSignaturesOrBuilder(
        int index) {
      return signatures_.get(index);
    }

    public static final int SENDER_FIELD_NUMBER = 7;
    private forge_abi.Exchange.ExchangeInfo sender_;
    /**
     * <pre>
     * The inner exchange tether transaction's fields
     * </pre>
     *
     * <code>.forge_abi.ExchangeInfo sender = 7;</code>
     */
    public boolean hasSender() {
      return sender_ != null;
    }
    /**
     * <pre>
     * The inner exchange tether transaction's fields
     * </pre>
     *
     * <code>.forge_abi.ExchangeInfo sender = 7;</code>
     */
    public forge_abi.Exchange.ExchangeInfo getSender() {
      return sender_ == null ? forge_abi.Exchange.ExchangeInfo.getDefaultInstance() : sender_;
    }
    /**
     * <pre>
     * The inner exchange tether transaction's fields
     * </pre>
     *
     * <code>.forge_abi.ExchangeInfo sender = 7;</code>
     */
    public forge_abi.Exchange.ExchangeInfoOrBuilder getSenderOrBuilder() {
      return getSender();
    }

    public static final int RECEIVER_FIELD_NUMBER = 8;
    private forge_abi.WithdrawTether.TetherTradeInfo receiver_;
    /**
     * <code>.forge_abi.TetherTradeInfo receiver = 8;</code>
     */
    public boolean hasReceiver() {
      return receiver_ != null;
    }
    /**
     * <code>.forge_abi.TetherTradeInfo receiver = 8;</code>
     */
    public forge_abi.WithdrawTether.TetherTradeInfo getReceiver() {
      return receiver_ == null ? forge_abi.WithdrawTether.TetherTradeInfo.getDefaultInstance() : receiver_;
    }
    /**
     * <code>.forge_abi.TetherTradeInfo receiver = 8;</code>
     */
    public forge_abi.WithdrawTether.TetherTradeInfoOrBuilder getReceiverOrBuilder() {
      return getReceiver();
    }

    public static final int EXPIRED_AT_FIELD_NUMBER = 9;
    private com.google.protobuf.Timestamp expiredAt_;
    /**
     * <code>.google.protobuf.Timestamp expired_at = 9;</code>
     */
    public boolean hasExpiredAt() {
      return expiredAt_ != null;
    }
    /**
     * <code>.google.protobuf.Timestamp expired_at = 9;</code>
     */
    public com.google.protobuf.Timestamp getExpiredAt() {
      return expiredAt_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : expiredAt_;
    }
    /**
     * <code>.google.protobuf.Timestamp expired_at = 9;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getExpiredAtOrBuilder() {
      return getExpiredAt();
    }

    public static final int DATA_FIELD_NUMBER = 10;
    private com.google.protobuf.Any data_;
    /**
     * <pre>
     * This is the data field of the inner exchange tether transaction
     * </pre>
     *
     * <code>.google.protobuf.Any data = 10;</code>
     */
    public boolean hasData() {
      return data_ != null;
    }
    /**
     * <pre>
     * This is the data field of the inner exchange tether transaction
     * </pre>
     *
     * <code>.google.protobuf.Any data = 10;</code>
     */
    public com.google.protobuf.Any getData() {
      return data_ == null ? com.google.protobuf.Any.getDefaultInstance() : data_;
    }
    /**
     * <pre>
     * This is the data field of the inner exchange tether transaction
     * </pre>
     *
     * <code>.google.protobuf.Any data = 10;</code>
     */
    public com.google.protobuf.AnyOrBuilder getDataOrBuilder() {
      return getData();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getFromBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, from_);
      }
      if (nonce_ != 0L) {
        output.writeUInt64(2, nonce_);
      }
      if (!getChainIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, chainId_);
      }
      if (!pk_.isEmpty()) {
        output.writeBytes(4, pk_);
      }
      if (!signature_.isEmpty()) {
        output.writeBytes(5, signature_);
      }
      for (int i = 0; i < signatures_.size(); i++) {
        output.writeMessage(6, signatures_.get(i));
      }
      if (sender_ != null) {
        output.writeMessage(7, getSender());
      }
      if (receiver_ != null) {
        output.writeMessage(8, getReceiver());
      }
      if (expiredAt_ != null) {
        output.writeMessage(9, getExpiredAt());
      }
      if (data_ != null) {
        output.writeMessage(10, getData());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getFromBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, from_);
      }
      if (nonce_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, nonce_);
      }
      if (!getChainIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, chainId_);
      }
      if (!pk_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, pk_);
      }
      if (!signature_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, signature_);
      }
      for (int i = 0; i < signatures_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, signatures_.get(i));
      }
      if (sender_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getSender());
      }
      if (receiver_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getReceiver());
      }
      if (expiredAt_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getExpiredAt());
      }
      if (data_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getData());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof forge_abi.WithdrawTether.WithdrawTetherTx)) {
        return super.equals(obj);
      }
      forge_abi.WithdrawTether.WithdrawTetherTx other = (forge_abi.WithdrawTether.WithdrawTetherTx) obj;

      boolean result = true;
      result = result && getFrom()
          .equals(other.getFrom());
      result = result && (getNonce()
          == other.getNonce());
      result = result && getChainId()
          .equals(other.getChainId());
      result = result && getPk()
          .equals(other.getPk());
      result = result && getSignature()
          .equals(other.getSignature());
      result = result && getSignaturesList()
          .equals(other.getSignaturesList());
      result = result && (hasSender() == other.hasSender());
      if (hasSender()) {
        result = result && getSender()
            .equals(other.getSender());
      }
      result = result && (hasReceiver() == other.hasReceiver());
      if (hasReceiver()) {
        result = result && getReceiver()
            .equals(other.getReceiver());
      }
      result = result && (hasExpiredAt() == other.hasExpiredAt());
      if (hasExpiredAt()) {
        result = result && getExpiredAt()
            .equals(other.getExpiredAt());
      }
      result = result && (hasData() == other.hasData());
      if (hasData()) {
        result = result && getData()
            .equals(other.getData());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FROM_FIELD_NUMBER;
      hash = (53 * hash) + getFrom().hashCode();
      hash = (37 * hash) + NONCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getNonce());
      hash = (37 * hash) + CHAIN_ID_FIELD_NUMBER;
      hash = (53 * hash) + getChainId().hashCode();
      hash = (37 * hash) + PK_FIELD_NUMBER;
      hash = (53 * hash) + getPk().hashCode();
      hash = (37 * hash) + SIGNATURE_FIELD_NUMBER;
      hash = (53 * hash) + getSignature().hashCode();
      if (getSignaturesCount() > 0) {
        hash = (37 * hash) + SIGNATURES_FIELD_NUMBER;
        hash = (53 * hash) + getSignaturesList().hashCode();
      }
      if (hasSender()) {
        hash = (37 * hash) + SENDER_FIELD_NUMBER;
        hash = (53 * hash) + getSender().hashCode();
      }
      if (hasReceiver()) {
        hash = (37 * hash) + RECEIVER_FIELD_NUMBER;
        hash = (53 * hash) + getReceiver().hashCode();
      }
      if (hasExpiredAt()) {
        hash = (37 * hash) + EXPIRED_AT_FIELD_NUMBER;
        hash = (53 * hash) + getExpiredAt().hashCode();
      }
      if (hasData()) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getData().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static forge_abi.WithdrawTether.WithdrawTetherTx parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static forge_abi.WithdrawTether.WithdrawTetherTx parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static forge_abi.WithdrawTether.WithdrawTetherTx parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static forge_abi.WithdrawTether.WithdrawTetherTx parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static forge_abi.WithdrawTether.WithdrawTetherTx parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static forge_abi.WithdrawTether.WithdrawTetherTx parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static forge_abi.WithdrawTether.WithdrawTetherTx parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static forge_abi.WithdrawTether.WithdrawTetherTx parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static forge_abi.WithdrawTether.WithdrawTetherTx parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static forge_abi.WithdrawTether.WithdrawTetherTx parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(forge_abi.WithdrawTether.WithdrawTetherTx prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * This transaction is designed to make cross-chain transaction.
     * </pre>
     *
     * Protobuf type {@code forge_abi.WithdrawTetherTx}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:forge_abi.WithdrawTetherTx)
        forge_abi.WithdrawTether.WithdrawTetherTxOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return forge_abi.WithdrawTether.internal_static_forge_abi_WithdrawTetherTx_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return forge_abi.WithdrawTether.internal_static_forge_abi_WithdrawTetherTx_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                forge_abi.WithdrawTether.WithdrawTetherTx.class, forge_abi.WithdrawTether.WithdrawTetherTx.Builder.class);
      }

      // Construct using forge_abi.WithdrawTether.WithdrawTetherTx.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSignaturesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        from_ = "";

        nonce_ = 0L;

        chainId_ = "";

        pk_ = com.google.protobuf.ByteString.EMPTY;

        signature_ = com.google.protobuf.ByteString.EMPTY;

        if (signaturesBuilder_ == null) {
          signatures_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          signaturesBuilder_.clear();
        }
        if (senderBuilder_ == null) {
          sender_ = null;
        } else {
          sender_ = null;
          senderBuilder_ = null;
        }
        if (receiverBuilder_ == null) {
          receiver_ = null;
        } else {
          receiver_ = null;
          receiverBuilder_ = null;
        }
        if (expiredAtBuilder_ == null) {
          expiredAt_ = null;
        } else {
          expiredAt_ = null;
          expiredAtBuilder_ = null;
        }
        if (dataBuilder_ == null) {
          data_ = null;
        } else {
          data_ = null;
          dataBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return forge_abi.WithdrawTether.internal_static_forge_abi_WithdrawTetherTx_descriptor;
      }

      public forge_abi.WithdrawTether.WithdrawTetherTx getDefaultInstanceForType() {
        return forge_abi.WithdrawTether.WithdrawTetherTx.getDefaultInstance();
      }

      public forge_abi.WithdrawTether.WithdrawTetherTx build() {
        forge_abi.WithdrawTether.WithdrawTetherTx result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public forge_abi.WithdrawTether.WithdrawTetherTx buildPartial() {
        forge_abi.WithdrawTether.WithdrawTetherTx result = new forge_abi.WithdrawTether.WithdrawTetherTx(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.from_ = from_;
        result.nonce_ = nonce_;
        result.chainId_ = chainId_;
        result.pk_ = pk_;
        result.signature_ = signature_;
        if (signaturesBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            signatures_ = java.util.Collections.unmodifiableList(signatures_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.signatures_ = signatures_;
        } else {
          result.signatures_ = signaturesBuilder_.build();
        }
        if (senderBuilder_ == null) {
          result.sender_ = sender_;
        } else {
          result.sender_ = senderBuilder_.build();
        }
        if (receiverBuilder_ == null) {
          result.receiver_ = receiver_;
        } else {
          result.receiver_ = receiverBuilder_.build();
        }
        if (expiredAtBuilder_ == null) {
          result.expiredAt_ = expiredAt_;
        } else {
          result.expiredAt_ = expiredAtBuilder_.build();
        }
        if (dataBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof forge_abi.WithdrawTether.WithdrawTetherTx) {
          return mergeFrom((forge_abi.WithdrawTether.WithdrawTetherTx)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(forge_abi.WithdrawTether.WithdrawTetherTx other) {
        if (other == forge_abi.WithdrawTether.WithdrawTetherTx.getDefaultInstance()) return this;
        if (!other.getFrom().isEmpty()) {
          from_ = other.from_;
          onChanged();
        }
        if (other.getNonce() != 0L) {
          setNonce(other.getNonce());
        }
        if (!other.getChainId().isEmpty()) {
          chainId_ = other.chainId_;
          onChanged();
        }
        if (other.getPk() != com.google.protobuf.ByteString.EMPTY) {
          setPk(other.getPk());
        }
        if (other.getSignature() != com.google.protobuf.ByteString.EMPTY) {
          setSignature(other.getSignature());
        }
        if (signaturesBuilder_ == null) {
          if (!other.signatures_.isEmpty()) {
            if (signatures_.isEmpty()) {
              signatures_ = other.signatures_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureSignaturesIsMutable();
              signatures_.addAll(other.signatures_);
            }
            onChanged();
          }
        } else {
          if (!other.signatures_.isEmpty()) {
            if (signaturesBuilder_.isEmpty()) {
              signaturesBuilder_.dispose();
              signaturesBuilder_ = null;
              signatures_ = other.signatures_;
              bitField0_ = (bitField0_ & ~0x00000020);
              signaturesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSignaturesFieldBuilder() : null;
            } else {
              signaturesBuilder_.addAllMessages(other.signatures_);
            }
          }
        }
        if (other.hasSender()) {
          mergeSender(other.getSender());
        }
        if (other.hasReceiver()) {
          mergeReceiver(other.getReceiver());
        }
        if (other.hasExpiredAt()) {
          mergeExpiredAt(other.getExpiredAt());
        }
        if (other.hasData()) {
          mergeData(other.getData());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        forge_abi.WithdrawTether.WithdrawTetherTx parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (forge_abi.WithdrawTether.WithdrawTetherTx) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object from_ = "";
      /**
       * <pre>
       * The outter transaction's fields
       * </pre>
       *
       * <code>string from = 1;</code>
       */
      public java.lang.String getFrom() {
        java.lang.Object ref = from_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          from_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The outter transaction's fields
       * </pre>
       *
       * <code>string from = 1;</code>
       */
      public com.google.protobuf.ByteString
          getFromBytes() {
        java.lang.Object ref = from_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          from_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The outter transaction's fields
       * </pre>
       *
       * <code>string from = 1;</code>
       */
      public Builder setFrom(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        from_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The outter transaction's fields
       * </pre>
       *
       * <code>string from = 1;</code>
       */
      public Builder clearFrom() {
        
        from_ = getDefaultInstance().getFrom();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The outter transaction's fields
       * </pre>
       *
       * <code>string from = 1;</code>
       */
      public Builder setFromBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        from_ = value;
        onChanged();
        return this;
      }

      private long nonce_ ;
      /**
       * <code>uint64 nonce = 2;</code>
       */
      public long getNonce() {
        return nonce_;
      }
      /**
       * <code>uint64 nonce = 2;</code>
       */
      public Builder setNonce(long value) {
        
        nonce_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 nonce = 2;</code>
       */
      public Builder clearNonce() {
        
        nonce_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object chainId_ = "";
      /**
       * <code>string chain_id = 3;</code>
       */
      public java.lang.String getChainId() {
        java.lang.Object ref = chainId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          chainId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string chain_id = 3;</code>
       */
      public com.google.protobuf.ByteString
          getChainIdBytes() {
        java.lang.Object ref = chainId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          chainId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string chain_id = 3;</code>
       */
      public Builder setChainId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        chainId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string chain_id = 3;</code>
       */
      public Builder clearChainId() {
        
        chainId_ = getDefaultInstance().getChainId();
        onChanged();
        return this;
      }
      /**
       * <code>string chain_id = 3;</code>
       */
      public Builder setChainIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        chainId_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString pk_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes pk = 4;</code>
       */
      public com.google.protobuf.ByteString getPk() {
        return pk_;
      }
      /**
       * <code>bytes pk = 4;</code>
       */
      public Builder setPk(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        pk_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes pk = 4;</code>
       */
      public Builder clearPk() {
        
        pk_ = getDefaultInstance().getPk();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes signature = 5;</code>
       */
      public com.google.protobuf.ByteString getSignature() {
        return signature_;
      }
      /**
       * <code>bytes signature = 5;</code>
       */
      public Builder setSignature(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        signature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes signature = 5;</code>
       */
      public Builder clearSignature() {
        
        signature_ = getDefaultInstance().getSignature();
        onChanged();
        return this;
      }

      private java.util.List<forge_abi.Type.Multisig> signatures_ =
        java.util.Collections.emptyList();
      private void ensureSignaturesIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          signatures_ = new java.util.ArrayList<forge_abi.Type.Multisig>(signatures_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          forge_abi.Type.Multisig, forge_abi.Type.Multisig.Builder, forge_abi.Type.MultisigOrBuilder> signaturesBuilder_;

      /**
       * <code>repeated .forge_abi.Multisig signatures = 6;</code>
       */
      public java.util.List<forge_abi.Type.Multisig> getSignaturesList() {
        if (signaturesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(signatures_);
        } else {
          return signaturesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .forge_abi.Multisig signatures = 6;</code>
       */
      public int getSignaturesCount() {
        if (signaturesBuilder_ == null) {
          return signatures_.size();
        } else {
          return signaturesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .forge_abi.Multisig signatures = 6;</code>
       */
      public forge_abi.Type.Multisig getSignatures(int index) {
        if (signaturesBuilder_ == null) {
          return signatures_.get(index);
        } else {
          return signaturesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .forge_abi.Multisig signatures = 6;</code>
       */
      public Builder setSignatures(
          int index, forge_abi.Type.Multisig value) {
        if (signaturesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignaturesIsMutable();
          signatures_.set(index, value);
          onChanged();
        } else {
          signaturesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .forge_abi.Multisig signatures = 6;</code>
       */
      public Builder setSignatures(
          int index, forge_abi.Type.Multisig.Builder builderForValue) {
        if (signaturesBuilder_ == null) {
          ensureSignaturesIsMutable();
          signatures_.set(index, builderForValue.build());
          onChanged();
        } else {
          signaturesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .forge_abi.Multisig signatures = 6;</code>
       */
      public Builder addSignatures(forge_abi.Type.Multisig value) {
        if (signaturesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignaturesIsMutable();
          signatures_.add(value);
          onChanged();
        } else {
          signaturesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .forge_abi.Multisig signatures = 6;</code>
       */
      public Builder addSignatures(
          int index, forge_abi.Type.Multisig value) {
        if (signaturesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignaturesIsMutable();
          signatures_.add(index, value);
          onChanged();
        } else {
          signaturesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .forge_abi.Multisig signatures = 6;</code>
       */
      public Builder addSignatures(
          forge_abi.Type.Multisig.Builder builderForValue) {
        if (signaturesBuilder_ == null) {
          ensureSignaturesIsMutable();
          signatures_.add(builderForValue.build());
          onChanged();
        } else {
          signaturesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .forge_abi.Multisig signatures = 6;</code>
       */
      public Builder addSignatures(
          int index, forge_abi.Type.Multisig.Builder builderForValue) {
        if (signaturesBuilder_ == null) {
          ensureSignaturesIsMutable();
          signatures_.add(index, builderForValue.build());
          onChanged();
        } else {
          signaturesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .forge_abi.Multisig signatures = 6;</code>
       */
      public Builder addAllSignatures(
          java.lang.Iterable<? extends forge_abi.Type.Multisig> values) {
        if (signaturesBuilder_ == null) {
          ensureSignaturesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, signatures_);
          onChanged();
        } else {
          signaturesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .forge_abi.Multisig signatures = 6;</code>
       */
      public Builder clearSignatures() {
        if (signaturesBuilder_ == null) {
          signatures_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          signaturesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .forge_abi.Multisig signatures = 6;</code>
       */
      public Builder removeSignatures(int index) {
        if (signaturesBuilder_ == null) {
          ensureSignaturesIsMutable();
          signatures_.remove(index);
          onChanged();
        } else {
          signaturesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .forge_abi.Multisig signatures = 6;</code>
       */
      public forge_abi.Type.Multisig.Builder getSignaturesBuilder(
          int index) {
        return getSignaturesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .forge_abi.Multisig signatures = 6;</code>
       */
      public forge_abi.Type.MultisigOrBuilder getSignaturesOrBuilder(
          int index) {
        if (signaturesBuilder_ == null) {
          return signatures_.get(index);  } else {
          return signaturesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .forge_abi.Multisig signatures = 6;</code>
       */
      public java.util.List<? extends forge_abi.Type.MultisigOrBuilder> 
           getSignaturesOrBuilderList() {
        if (signaturesBuilder_ != null) {
          return signaturesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(signatures_);
        }
      }
      /**
       * <code>repeated .forge_abi.Multisig signatures = 6;</code>
       */
      public forge_abi.Type.Multisig.Builder addSignaturesBuilder() {
        return getSignaturesFieldBuilder().addBuilder(
            forge_abi.Type.Multisig.getDefaultInstance());
      }
      /**
       * <code>repeated .forge_abi.Multisig signatures = 6;</code>
       */
      public forge_abi.Type.Multisig.Builder addSignaturesBuilder(
          int index) {
        return getSignaturesFieldBuilder().addBuilder(
            index, forge_abi.Type.Multisig.getDefaultInstance());
      }
      /**
       * <code>repeated .forge_abi.Multisig signatures = 6;</code>
       */
      public java.util.List<forge_abi.Type.Multisig.Builder> 
           getSignaturesBuilderList() {
        return getSignaturesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          forge_abi.Type.Multisig, forge_abi.Type.Multisig.Builder, forge_abi.Type.MultisigOrBuilder> 
          getSignaturesFieldBuilder() {
        if (signaturesBuilder_ == null) {
          signaturesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              forge_abi.Type.Multisig, forge_abi.Type.Multisig.Builder, forge_abi.Type.MultisigOrBuilder>(
                  signatures_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          signatures_ = null;
        }
        return signaturesBuilder_;
      }

      private forge_abi.Exchange.ExchangeInfo sender_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          forge_abi.Exchange.ExchangeInfo, forge_abi.Exchange.ExchangeInfo.Builder, forge_abi.Exchange.ExchangeInfoOrBuilder> senderBuilder_;
      /**
       * <pre>
       * The inner exchange tether transaction's fields
       * </pre>
       *
       * <code>.forge_abi.ExchangeInfo sender = 7;</code>
       */
      public boolean hasSender() {
        return senderBuilder_ != null || sender_ != null;
      }
      /**
       * <pre>
       * The inner exchange tether transaction's fields
       * </pre>
       *
       * <code>.forge_abi.ExchangeInfo sender = 7;</code>
       */
      public forge_abi.Exchange.ExchangeInfo getSender() {
        if (senderBuilder_ == null) {
          return sender_ == null ? forge_abi.Exchange.ExchangeInfo.getDefaultInstance() : sender_;
        } else {
          return senderBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The inner exchange tether transaction's fields
       * </pre>
       *
       * <code>.forge_abi.ExchangeInfo sender = 7;</code>
       */
      public Builder setSender(forge_abi.Exchange.ExchangeInfo value) {
        if (senderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sender_ = value;
          onChanged();
        } else {
          senderBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The inner exchange tether transaction's fields
       * </pre>
       *
       * <code>.forge_abi.ExchangeInfo sender = 7;</code>
       */
      public Builder setSender(
          forge_abi.Exchange.ExchangeInfo.Builder builderForValue) {
        if (senderBuilder_ == null) {
          sender_ = builderForValue.build();
          onChanged();
        } else {
          senderBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The inner exchange tether transaction's fields
       * </pre>
       *
       * <code>.forge_abi.ExchangeInfo sender = 7;</code>
       */
      public Builder mergeSender(forge_abi.Exchange.ExchangeInfo value) {
        if (senderBuilder_ == null) {
          if (sender_ != null) {
            sender_ =
              forge_abi.Exchange.ExchangeInfo.newBuilder(sender_).mergeFrom(value).buildPartial();
          } else {
            sender_ = value;
          }
          onChanged();
        } else {
          senderBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The inner exchange tether transaction's fields
       * </pre>
       *
       * <code>.forge_abi.ExchangeInfo sender = 7;</code>
       */
      public Builder clearSender() {
        if (senderBuilder_ == null) {
          sender_ = null;
          onChanged();
        } else {
          sender_ = null;
          senderBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The inner exchange tether transaction's fields
       * </pre>
       *
       * <code>.forge_abi.ExchangeInfo sender = 7;</code>
       */
      public forge_abi.Exchange.ExchangeInfo.Builder getSenderBuilder() {
        
        onChanged();
        return getSenderFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The inner exchange tether transaction's fields
       * </pre>
       *
       * <code>.forge_abi.ExchangeInfo sender = 7;</code>
       */
      public forge_abi.Exchange.ExchangeInfoOrBuilder getSenderOrBuilder() {
        if (senderBuilder_ != null) {
          return senderBuilder_.getMessageOrBuilder();
        } else {
          return sender_ == null ?
              forge_abi.Exchange.ExchangeInfo.getDefaultInstance() : sender_;
        }
      }
      /**
       * <pre>
       * The inner exchange tether transaction's fields
       * </pre>
       *
       * <code>.forge_abi.ExchangeInfo sender = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          forge_abi.Exchange.ExchangeInfo, forge_abi.Exchange.ExchangeInfo.Builder, forge_abi.Exchange.ExchangeInfoOrBuilder> 
          getSenderFieldBuilder() {
        if (senderBuilder_ == null) {
          senderBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              forge_abi.Exchange.ExchangeInfo, forge_abi.Exchange.ExchangeInfo.Builder, forge_abi.Exchange.ExchangeInfoOrBuilder>(
                  getSender(),
                  getParentForChildren(),
                  isClean());
          sender_ = null;
        }
        return senderBuilder_;
      }

      private forge_abi.WithdrawTether.TetherTradeInfo receiver_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          forge_abi.WithdrawTether.TetherTradeInfo, forge_abi.WithdrawTether.TetherTradeInfo.Builder, forge_abi.WithdrawTether.TetherTradeInfoOrBuilder> receiverBuilder_;
      /**
       * <code>.forge_abi.TetherTradeInfo receiver = 8;</code>
       */
      public boolean hasReceiver() {
        return receiverBuilder_ != null || receiver_ != null;
      }
      /**
       * <code>.forge_abi.TetherTradeInfo receiver = 8;</code>
       */
      public forge_abi.WithdrawTether.TetherTradeInfo getReceiver() {
        if (receiverBuilder_ == null) {
          return receiver_ == null ? forge_abi.WithdrawTether.TetherTradeInfo.getDefaultInstance() : receiver_;
        } else {
          return receiverBuilder_.getMessage();
        }
      }
      /**
       * <code>.forge_abi.TetherTradeInfo receiver = 8;</code>
       */
      public Builder setReceiver(forge_abi.WithdrawTether.TetherTradeInfo value) {
        if (receiverBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          receiver_ = value;
          onChanged();
        } else {
          receiverBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.forge_abi.TetherTradeInfo receiver = 8;</code>
       */
      public Builder setReceiver(
          forge_abi.WithdrawTether.TetherTradeInfo.Builder builderForValue) {
        if (receiverBuilder_ == null) {
          receiver_ = builderForValue.build();
          onChanged();
        } else {
          receiverBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.forge_abi.TetherTradeInfo receiver = 8;</code>
       */
      public Builder mergeReceiver(forge_abi.WithdrawTether.TetherTradeInfo value) {
        if (receiverBuilder_ == null) {
          if (receiver_ != null) {
            receiver_ =
              forge_abi.WithdrawTether.TetherTradeInfo.newBuilder(receiver_).mergeFrom(value).buildPartial();
          } else {
            receiver_ = value;
          }
          onChanged();
        } else {
          receiverBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.forge_abi.TetherTradeInfo receiver = 8;</code>
       */
      public Builder clearReceiver() {
        if (receiverBuilder_ == null) {
          receiver_ = null;
          onChanged();
        } else {
          receiver_ = null;
          receiverBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.forge_abi.TetherTradeInfo receiver = 8;</code>
       */
      public forge_abi.WithdrawTether.TetherTradeInfo.Builder getReceiverBuilder() {
        
        onChanged();
        return getReceiverFieldBuilder().getBuilder();
      }
      /**
       * <code>.forge_abi.TetherTradeInfo receiver = 8;</code>
       */
      public forge_abi.WithdrawTether.TetherTradeInfoOrBuilder getReceiverOrBuilder() {
        if (receiverBuilder_ != null) {
          return receiverBuilder_.getMessageOrBuilder();
        } else {
          return receiver_ == null ?
              forge_abi.WithdrawTether.TetherTradeInfo.getDefaultInstance() : receiver_;
        }
      }
      /**
       * <code>.forge_abi.TetherTradeInfo receiver = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          forge_abi.WithdrawTether.TetherTradeInfo, forge_abi.WithdrawTether.TetherTradeInfo.Builder, forge_abi.WithdrawTether.TetherTradeInfoOrBuilder> 
          getReceiverFieldBuilder() {
        if (receiverBuilder_ == null) {
          receiverBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              forge_abi.WithdrawTether.TetherTradeInfo, forge_abi.WithdrawTether.TetherTradeInfo.Builder, forge_abi.WithdrawTether.TetherTradeInfoOrBuilder>(
                  getReceiver(),
                  getParentForChildren(),
                  isClean());
          receiver_ = null;
        }
        return receiverBuilder_;
      }

      private com.google.protobuf.Timestamp expiredAt_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> expiredAtBuilder_;
      /**
       * <code>.google.protobuf.Timestamp expired_at = 9;</code>
       */
      public boolean hasExpiredAt() {
        return expiredAtBuilder_ != null || expiredAt_ != null;
      }
      /**
       * <code>.google.protobuf.Timestamp expired_at = 9;</code>
       */
      public com.google.protobuf.Timestamp getExpiredAt() {
        if (expiredAtBuilder_ == null) {
          return expiredAt_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : expiredAt_;
        } else {
          return expiredAtBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.Timestamp expired_at = 9;</code>
       */
      public Builder setExpiredAt(com.google.protobuf.Timestamp value) {
        if (expiredAtBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          expiredAt_ = value;
          onChanged();
        } else {
          expiredAtBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp expired_at = 9;</code>
       */
      public Builder setExpiredAt(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (expiredAtBuilder_ == null) {
          expiredAt_ = builderForValue.build();
          onChanged();
        } else {
          expiredAtBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp expired_at = 9;</code>
       */
      public Builder mergeExpiredAt(com.google.protobuf.Timestamp value) {
        if (expiredAtBuilder_ == null) {
          if (expiredAt_ != null) {
            expiredAt_ =
              com.google.protobuf.Timestamp.newBuilder(expiredAt_).mergeFrom(value).buildPartial();
          } else {
            expiredAt_ = value;
          }
          onChanged();
        } else {
          expiredAtBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp expired_at = 9;</code>
       */
      public Builder clearExpiredAt() {
        if (expiredAtBuilder_ == null) {
          expiredAt_ = null;
          onChanged();
        } else {
          expiredAt_ = null;
          expiredAtBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp expired_at = 9;</code>
       */
      public com.google.protobuf.Timestamp.Builder getExpiredAtBuilder() {
        
        onChanged();
        return getExpiredAtFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.Timestamp expired_at = 9;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getExpiredAtOrBuilder() {
        if (expiredAtBuilder_ != null) {
          return expiredAtBuilder_.getMessageOrBuilder();
        } else {
          return expiredAt_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : expiredAt_;
        }
      }
      /**
       * <code>.google.protobuf.Timestamp expired_at = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getExpiredAtFieldBuilder() {
        if (expiredAtBuilder_ == null) {
          expiredAtBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getExpiredAt(),
                  getParentForChildren(),
                  isClean());
          expiredAt_ = null;
        }
        return expiredAtBuilder_;
      }

      private com.google.protobuf.Any data_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> dataBuilder_;
      /**
       * <pre>
       * This is the data field of the inner exchange tether transaction
       * </pre>
       *
       * <code>.google.protobuf.Any data = 10;</code>
       */
      public boolean hasData() {
        return dataBuilder_ != null || data_ != null;
      }
      /**
       * <pre>
       * This is the data field of the inner exchange tether transaction
       * </pre>
       *
       * <code>.google.protobuf.Any data = 10;</code>
       */
      public com.google.protobuf.Any getData() {
        if (dataBuilder_ == null) {
          return data_ == null ? com.google.protobuf.Any.getDefaultInstance() : data_;
        } else {
          return dataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * This is the data field of the inner exchange tether transaction
       * </pre>
       *
       * <code>.google.protobuf.Any data = 10;</code>
       */
      public Builder setData(com.google.protobuf.Any value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          dataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * This is the data field of the inner exchange tether transaction
       * </pre>
       *
       * <code>.google.protobuf.Any data = 10;</code>
       */
      public Builder setData(
          com.google.protobuf.Any.Builder builderForValue) {
        if (dataBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          dataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * This is the data field of the inner exchange tether transaction
       * </pre>
       *
       * <code>.google.protobuf.Any data = 10;</code>
       */
      public Builder mergeData(com.google.protobuf.Any value) {
        if (dataBuilder_ == null) {
          if (data_ != null) {
            data_ =
              com.google.protobuf.Any.newBuilder(data_).mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          dataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * This is the data field of the inner exchange tether transaction
       * </pre>
       *
       * <code>.google.protobuf.Any data = 10;</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = null;
          onChanged();
        } else {
          data_ = null;
          dataBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * This is the data field of the inner exchange tether transaction
       * </pre>
       *
       * <code>.google.protobuf.Any data = 10;</code>
       */
      public com.google.protobuf.Any.Builder getDataBuilder() {
        
        onChanged();
        return getDataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * This is the data field of the inner exchange tether transaction
       * </pre>
       *
       * <code>.google.protobuf.Any data = 10;</code>
       */
      public com.google.protobuf.AnyOrBuilder getDataOrBuilder() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilder();
        } else {
          return data_ == null ?
              com.google.protobuf.Any.getDefaultInstance() : data_;
        }
      }
      /**
       * <pre>
       * This is the data field of the inner exchange tether transaction
       * </pre>
       *
       * <code>.google.protobuf.Any data = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                  getData(),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:forge_abi.WithdrawTetherTx)
    }

    // @@protoc_insertion_point(class_scope:forge_abi.WithdrawTetherTx)
    private static final forge_abi.WithdrawTether.WithdrawTetherTx DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new forge_abi.WithdrawTether.WithdrawTetherTx();
    }

    public static forge_abi.WithdrawTether.WithdrawTetherTx getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<WithdrawTetherTx>
        PARSER = new com.google.protobuf.AbstractParser<WithdrawTetherTx>() {
      public WithdrawTetherTx parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new WithdrawTetherTx(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<WithdrawTetherTx> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WithdrawTetherTx> getParserForType() {
      return PARSER;
    }

    public forge_abi.WithdrawTether.WithdrawTetherTx getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_forge_abi_TetherTradeInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_forge_abi_TetherTradeInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_forge_abi_WithdrawTetherTx_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_forge_abi_WithdrawTetherTx_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025withdraw_tether.proto\022\tforge_abi\032\031goog" +
      "le/protobuf/any.proto\032\037google/protobuf/t" +
      "imestamp.proto\032\ntype.proto\032\025exchange_tet" +
      "her.proto\032\016exchange.proto\"T\n\017TetherTrade" +
      "Info\022!\n\005value\030\001 \001(\0132\022.forge_abi.BigUint\022" +
      "\016\n\006assets\030\002 \003(\t\022\016\n\006tether\030\003 \001(\t\"\264\002\n\020With" +
      "drawTetherTx\022\014\n\004from\030\001 \001(\t\022\r\n\005nonce\030\002 \001(" +
      "\004\022\020\n\010chain_id\030\003 \001(\t\022\n\n\002pk\030\004 \001(\014\022\021\n\tsigna" +
      "ture\030\005 \001(\014\022\'\n\nsignatures\030\006 \003(\0132\023.forge_a" +
      "bi.Multisig\022\'\n\006sender\030\007 \001(\0132\027.forge_abi.",
      "ExchangeInfo\022,\n\010receiver\030\010 \001(\0132\032.forge_a" +
      "bi.TetherTradeInfo\022.\n\nexpired_at\030\t \001(\0132\032" +
      ".google.protobuf.Timestamp\022\"\n\004data\030\n \001(\013" +
      "2\024.google.protobuf.Anyb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.AnyProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
          forge_abi.Type.getDescriptor(),
          forge_abi.ExchangeTether.getDescriptor(),
          forge_abi.Exchange.getDescriptor(),
        }, assigner);
    internal_static_forge_abi_TetherTradeInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_forge_abi_TetherTradeInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_forge_abi_TetherTradeInfo_descriptor,
        new java.lang.String[] { "Value", "Assets", "Tether", });
    internal_static_forge_abi_WithdrawTetherTx_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_forge_abi_WithdrawTetherTx_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_forge_abi_WithdrawTetherTx_descriptor,
        new java.lang.String[] { "From", "Nonce", "ChainId", "Pk", "Signature", "Signatures", "Sender", "Receiver", "ExpiredAt", "Data", });
    com.google.protobuf.AnyProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
    forge_abi.Type.getDescriptor();
    forge_abi.ExchangeTether.getDescriptor();
    forge_abi.Exchange.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
