// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: stake.proto

package forge_abi;

public final class Stake {
  private Stake() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface stakeForAssetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:forge_abi.stakeForAsset)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * type url: fg:x:stake_asset. Stake for Tx is the same as stake for asset.
   * </pre>
   *
   * Protobuf type {@code forge_abi.stakeForAsset}
   */
  public  static final class stakeForAsset extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:forge_abi.stakeForAsset)
      stakeForAssetOrBuilder {
    // Use stakeForAsset.newBuilder() to construct.
    private stakeForAsset(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private stakeForAsset() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private stakeForAsset(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return forge_abi.Stake.internal_static_forge_abi_stakeForAsset_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return forge_abi.Stake.internal_static_forge_abi_stakeForAsset_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              forge_abi.Stake.stakeForAsset.class, forge_abi.Stake.stakeForAsset.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof forge_abi.Stake.stakeForAsset)) {
        return super.equals(obj);
      }
      forge_abi.Stake.stakeForAsset other = (forge_abi.Stake.stakeForAsset) obj;

      boolean result = true;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static forge_abi.Stake.stakeForAsset parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static forge_abi.Stake.stakeForAsset parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static forge_abi.Stake.stakeForAsset parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static forge_abi.Stake.stakeForAsset parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static forge_abi.Stake.stakeForAsset parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static forge_abi.Stake.stakeForAsset parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static forge_abi.Stake.stakeForAsset parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static forge_abi.Stake.stakeForAsset parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static forge_abi.Stake.stakeForAsset parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static forge_abi.Stake.stakeForAsset parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(forge_abi.Stake.stakeForAsset prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * type url: fg:x:stake_asset. Stake for Tx is the same as stake for asset.
     * </pre>
     *
     * Protobuf type {@code forge_abi.stakeForAsset}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:forge_abi.stakeForAsset)
        forge_abi.Stake.stakeForAssetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return forge_abi.Stake.internal_static_forge_abi_stakeForAsset_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return forge_abi.Stake.internal_static_forge_abi_stakeForAsset_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                forge_abi.Stake.stakeForAsset.class, forge_abi.Stake.stakeForAsset.Builder.class);
      }

      // Construct using forge_abi.Stake.stakeForAsset.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return forge_abi.Stake.internal_static_forge_abi_stakeForAsset_descriptor;
      }

      public forge_abi.Stake.stakeForAsset getDefaultInstanceForType() {
        return forge_abi.Stake.stakeForAsset.getDefaultInstance();
      }

      public forge_abi.Stake.stakeForAsset build() {
        forge_abi.Stake.stakeForAsset result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public forge_abi.Stake.stakeForAsset buildPartial() {
        forge_abi.Stake.stakeForAsset result = new forge_abi.Stake.stakeForAsset(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof forge_abi.Stake.stakeForAsset) {
          return mergeFrom((forge_abi.Stake.stakeForAsset)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(forge_abi.Stake.stakeForAsset other) {
        if (other == forge_abi.Stake.stakeForAsset.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        forge_abi.Stake.stakeForAsset parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (forge_abi.Stake.stakeForAsset) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:forge_abi.stakeForAsset)
    }

    // @@protoc_insertion_point(class_scope:forge_abi.stakeForAsset)
    private static final forge_abi.Stake.stakeForAsset DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new forge_abi.Stake.stakeForAsset();
    }

    public static forge_abi.Stake.stakeForAsset getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<stakeForAsset>
        PARSER = new com.google.protobuf.AbstractParser<stakeForAsset>() {
      public stakeForAsset parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new stakeForAsset(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<stakeForAsset> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<stakeForAsset> getParserForType() {
      return PARSER;
    }

    public forge_abi.Stake.stakeForAsset getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface stakeForChainOrBuilder extends
      // @@protoc_insertion_point(interface_extends:forge_abi.stakeForChain)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * type url: fg:x:stake_chain. So far we haven't figured out how this could be
   * done.
   * </pre>
   *
   * Protobuf type {@code forge_abi.stakeForChain}
   */
  public  static final class stakeForChain extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:forge_abi.stakeForChain)
      stakeForChainOrBuilder {
    // Use stakeForChain.newBuilder() to construct.
    private stakeForChain(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private stakeForChain() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private stakeForChain(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return forge_abi.Stake.internal_static_forge_abi_stakeForChain_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return forge_abi.Stake.internal_static_forge_abi_stakeForChain_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              forge_abi.Stake.stakeForChain.class, forge_abi.Stake.stakeForChain.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof forge_abi.Stake.stakeForChain)) {
        return super.equals(obj);
      }
      forge_abi.Stake.stakeForChain other = (forge_abi.Stake.stakeForChain) obj;

      boolean result = true;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static forge_abi.Stake.stakeForChain parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static forge_abi.Stake.stakeForChain parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static forge_abi.Stake.stakeForChain parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static forge_abi.Stake.stakeForChain parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static forge_abi.Stake.stakeForChain parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static forge_abi.Stake.stakeForChain parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static forge_abi.Stake.stakeForChain parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static forge_abi.Stake.stakeForChain parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static forge_abi.Stake.stakeForChain parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static forge_abi.Stake.stakeForChain parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(forge_abi.Stake.stakeForChain prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * type url: fg:x:stake_chain. So far we haven't figured out how this could be
     * done.
     * </pre>
     *
     * Protobuf type {@code forge_abi.stakeForChain}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:forge_abi.stakeForChain)
        forge_abi.Stake.stakeForChainOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return forge_abi.Stake.internal_static_forge_abi_stakeForChain_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return forge_abi.Stake.internal_static_forge_abi_stakeForChain_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                forge_abi.Stake.stakeForChain.class, forge_abi.Stake.stakeForChain.Builder.class);
      }

      // Construct using forge_abi.Stake.stakeForChain.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return forge_abi.Stake.internal_static_forge_abi_stakeForChain_descriptor;
      }

      public forge_abi.Stake.stakeForChain getDefaultInstanceForType() {
        return forge_abi.Stake.stakeForChain.getDefaultInstance();
      }

      public forge_abi.Stake.stakeForChain build() {
        forge_abi.Stake.stakeForChain result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public forge_abi.Stake.stakeForChain buildPartial() {
        forge_abi.Stake.stakeForChain result = new forge_abi.Stake.stakeForChain(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof forge_abi.Stake.stakeForChain) {
          return mergeFrom((forge_abi.Stake.stakeForChain)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(forge_abi.Stake.stakeForChain other) {
        if (other == forge_abi.Stake.stakeForChain.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        forge_abi.Stake.stakeForChain parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (forge_abi.Stake.stakeForChain) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:forge_abi.stakeForChain)
    }

    // @@protoc_insertion_point(class_scope:forge_abi.stakeForChain)
    private static final forge_abi.Stake.stakeForChain DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new forge_abi.Stake.stakeForChain();
    }

    public static forge_abi.Stake.stakeForChain getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<stakeForChain>
        PARSER = new com.google.protobuf.AbstractParser<stakeForChain>() {
      public stakeForChain parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new stakeForChain(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<stakeForChain> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<stakeForChain> getParserForType() {
      return PARSER;
    }

    public forge_abi.Stake.stakeForChain getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StakeForNodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:forge_abi.StakeForNode)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * type url: fg:x:stake_node
   * </pre>
   *
   * Protobuf type {@code forge_abi.StakeForNode}
   */
  public  static final class StakeForNode extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:forge_abi.StakeForNode)
      StakeForNodeOrBuilder {
    // Use StakeForNode.newBuilder() to construct.
    private StakeForNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StakeForNode() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private StakeForNode(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return forge_abi.Stake.internal_static_forge_abi_StakeForNode_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return forge_abi.Stake.internal_static_forge_abi_StakeForNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              forge_abi.Stake.StakeForNode.class, forge_abi.Stake.StakeForNode.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof forge_abi.Stake.StakeForNode)) {
        return super.equals(obj);
      }
      forge_abi.Stake.StakeForNode other = (forge_abi.Stake.StakeForNode) obj;

      boolean result = true;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static forge_abi.Stake.StakeForNode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static forge_abi.Stake.StakeForNode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static forge_abi.Stake.StakeForNode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static forge_abi.Stake.StakeForNode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static forge_abi.Stake.StakeForNode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static forge_abi.Stake.StakeForNode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static forge_abi.Stake.StakeForNode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static forge_abi.Stake.StakeForNode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static forge_abi.Stake.StakeForNode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static forge_abi.Stake.StakeForNode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(forge_abi.Stake.StakeForNode prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * type url: fg:x:stake_node
     * </pre>
     *
     * Protobuf type {@code forge_abi.StakeForNode}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:forge_abi.StakeForNode)
        forge_abi.Stake.StakeForNodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return forge_abi.Stake.internal_static_forge_abi_StakeForNode_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return forge_abi.Stake.internal_static_forge_abi_StakeForNode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                forge_abi.Stake.StakeForNode.class, forge_abi.Stake.StakeForNode.Builder.class);
      }

      // Construct using forge_abi.Stake.StakeForNode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return forge_abi.Stake.internal_static_forge_abi_StakeForNode_descriptor;
      }

      public forge_abi.Stake.StakeForNode getDefaultInstanceForType() {
        return forge_abi.Stake.StakeForNode.getDefaultInstance();
      }

      public forge_abi.Stake.StakeForNode build() {
        forge_abi.Stake.StakeForNode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public forge_abi.Stake.StakeForNode buildPartial() {
        forge_abi.Stake.StakeForNode result = new forge_abi.Stake.StakeForNode(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof forge_abi.Stake.StakeForNode) {
          return mergeFrom((forge_abi.Stake.StakeForNode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(forge_abi.Stake.StakeForNode other) {
        if (other == forge_abi.Stake.StakeForNode.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        forge_abi.Stake.StakeForNode parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (forge_abi.Stake.StakeForNode) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:forge_abi.StakeForNode)
    }

    // @@protoc_insertion_point(class_scope:forge_abi.StakeForNode)
    private static final forge_abi.Stake.StakeForNode DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new forge_abi.Stake.StakeForNode();
    }

    public static forge_abi.Stake.StakeForNode getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StakeForNode>
        PARSER = new com.google.protobuf.AbstractParser<StakeForNode>() {
      public StakeForNode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new StakeForNode(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StakeForNode> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StakeForNode> getParserForType() {
      return PARSER;
    }

    public forge_abi.Stake.StakeForNode getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface stakeForUserOrBuilder extends
      // @@protoc_insertion_point(interface_extends:forge_abi.stakeForUser)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * type url: fg:x:stake_user
   * </pre>
   *
   * Protobuf type {@code forge_abi.stakeForUser}
   */
  public  static final class stakeForUser extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:forge_abi.stakeForUser)
      stakeForUserOrBuilder {
    // Use stakeForUser.newBuilder() to construct.
    private stakeForUser(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private stakeForUser() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private stakeForUser(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return forge_abi.Stake.internal_static_forge_abi_stakeForUser_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return forge_abi.Stake.internal_static_forge_abi_stakeForUser_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              forge_abi.Stake.stakeForUser.class, forge_abi.Stake.stakeForUser.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof forge_abi.Stake.stakeForUser)) {
        return super.equals(obj);
      }
      forge_abi.Stake.stakeForUser other = (forge_abi.Stake.stakeForUser) obj;

      boolean result = true;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static forge_abi.Stake.stakeForUser parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static forge_abi.Stake.stakeForUser parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static forge_abi.Stake.stakeForUser parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static forge_abi.Stake.stakeForUser parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static forge_abi.Stake.stakeForUser parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static forge_abi.Stake.stakeForUser parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static forge_abi.Stake.stakeForUser parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static forge_abi.Stake.stakeForUser parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static forge_abi.Stake.stakeForUser parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static forge_abi.Stake.stakeForUser parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(forge_abi.Stake.stakeForUser prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * type url: fg:x:stake_user
     * </pre>
     *
     * Protobuf type {@code forge_abi.stakeForUser}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:forge_abi.stakeForUser)
        forge_abi.Stake.stakeForUserOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return forge_abi.Stake.internal_static_forge_abi_stakeForUser_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return forge_abi.Stake.internal_static_forge_abi_stakeForUser_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                forge_abi.Stake.stakeForUser.class, forge_abi.Stake.stakeForUser.Builder.class);
      }

      // Construct using forge_abi.Stake.stakeForUser.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return forge_abi.Stake.internal_static_forge_abi_stakeForUser_descriptor;
      }

      public forge_abi.Stake.stakeForUser getDefaultInstanceForType() {
        return forge_abi.Stake.stakeForUser.getDefaultInstance();
      }

      public forge_abi.Stake.stakeForUser build() {
        forge_abi.Stake.stakeForUser result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public forge_abi.Stake.stakeForUser buildPartial() {
        forge_abi.Stake.stakeForUser result = new forge_abi.Stake.stakeForUser(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof forge_abi.Stake.stakeForUser) {
          return mergeFrom((forge_abi.Stake.stakeForUser)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(forge_abi.Stake.stakeForUser other) {
        if (other == forge_abi.Stake.stakeForUser.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        forge_abi.Stake.stakeForUser parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (forge_abi.Stake.stakeForUser) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:forge_abi.stakeForUser)
    }

    // @@protoc_insertion_point(class_scope:forge_abi.stakeForUser)
    private static final forge_abi.Stake.stakeForUser DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new forge_abi.Stake.stakeForUser();
    }

    public static forge_abi.Stake.stakeForUser getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<stakeForUser>
        PARSER = new com.google.protobuf.AbstractParser<stakeForUser>() {
      public stakeForUser parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new stakeForUser(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<stakeForUser> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<stakeForUser> getParserForType() {
      return PARSER;
    }

    public forge_abi.Stake.stakeForUser getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StakeTxOrBuilder extends
      // @@protoc_insertion_point(interface_extends:forge_abi.StakeTx)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string to = 1;</code>
     */
    java.lang.String getTo();
    /**
     * <code>string to = 1;</code>
     */
    com.google.protobuf.ByteString
        getToBytes();

    /**
     * <code>.forge_abi.BigSint value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>.forge_abi.BigSint value = 2;</code>
     */
    forge_abi.Type.BigSint getValue();
    /**
     * <code>.forge_abi.BigSint value = 2;</code>
     */
    forge_abi.Type.BigSintOrBuilder getValueOrBuilder();

    /**
     * <code>string message = 3;</code>
     */
    java.lang.String getMessage();
    /**
     * <code>string message = 3;</code>
     */
    com.google.protobuf.ByteString
        getMessageBytes();

    /**
     * <pre>
     * forge won't touch this field. Only forge app shall handle it.
     * forge app can extend the stake if the given data cannot meet its
     * requirement.
     * </pre>
     *
     * <code>.google.protobuf.Any data = 15;</code>
     */
    boolean hasData();
    /**
     * <pre>
     * forge won't touch this field. Only forge app shall handle it.
     * forge app can extend the stake if the given data cannot meet its
     * requirement.
     * </pre>
     *
     * <code>.google.protobuf.Any data = 15;</code>
     */
    com.google.protobuf.Any getData();
    /**
     * <pre>
     * forge won't touch this field. Only forge app shall handle it.
     * forge app can extend the stake if the given data cannot meet its
     * requirement.
     * </pre>
     *
     * <code>.google.protobuf.Any data = 15;</code>
     */
    com.google.protobuf.AnyOrBuilder getDataOrBuilder();
  }
  /**
   * <pre>
   * Here we will reuse DeclareTx to declare a node.
   * DeclareTx could only be carried out by node admin. We will have an RPC
   * to ask forge to use the private key of the node and declare its identity.
   * Then an account state will be created for that node and later on people can
   * stake to that account. The top N staked nodes will be validators in the
   * chain.
   * Once a node is declared, people can use StakeTx to stake its tokens to it
   * minimun staked token is 1. stake could be very flexible, that one can stake
   * for a node, a user, an asset, a chain or a tx hash (normally a vote tx)
   * </pre>
   *
   * Protobuf type {@code forge_abi.StakeTx}
   */
  public  static final class StakeTx extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:forge_abi.StakeTx)
      StakeTxOrBuilder {
    // Use StakeTx.newBuilder() to construct.
    private StakeTx(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StakeTx() {
      to_ = "";
      message_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private StakeTx(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              to_ = s;
              break;
            }
            case 18: {
              forge_abi.Type.BigSint.Builder subBuilder = null;
              if (value_ != null) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(forge_abi.Type.BigSint.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              message_ = s;
              break;
            }
            case 122: {
              com.google.protobuf.Any.Builder subBuilder = null;
              if (data_ != null) {
                subBuilder = data_.toBuilder();
              }
              data_ = input.readMessage(com.google.protobuf.Any.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(data_);
                data_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return forge_abi.Stake.internal_static_forge_abi_StakeTx_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return forge_abi.Stake.internal_static_forge_abi_StakeTx_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              forge_abi.Stake.StakeTx.class, forge_abi.Stake.StakeTx.Builder.class);
    }

    public static final int TO_FIELD_NUMBER = 1;
    private volatile java.lang.Object to_;
    /**
     * <code>string to = 1;</code>
     */
    public java.lang.String getTo() {
      java.lang.Object ref = to_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        to_ = s;
        return s;
      }
    }
    /**
     * <code>string to = 1;</code>
     */
    public com.google.protobuf.ByteString
        getToBytes() {
      java.lang.Object ref = to_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        to_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private forge_abi.Type.BigSint value_;
    /**
     * <code>.forge_abi.BigSint value = 2;</code>
     */
    public boolean hasValue() {
      return value_ != null;
    }
    /**
     * <code>.forge_abi.BigSint value = 2;</code>
     */
    public forge_abi.Type.BigSint getValue() {
      return value_ == null ? forge_abi.Type.BigSint.getDefaultInstance() : value_;
    }
    /**
     * <code>.forge_abi.BigSint value = 2;</code>
     */
    public forge_abi.Type.BigSintOrBuilder getValueOrBuilder() {
      return getValue();
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private volatile java.lang.Object message_;
    /**
     * <code>string message = 3;</code>
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        message_ = s;
        return s;
      }
    }
    /**
     * <code>string message = 3;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DATA_FIELD_NUMBER = 15;
    private com.google.protobuf.Any data_;
    /**
     * <pre>
     * forge won't touch this field. Only forge app shall handle it.
     * forge app can extend the stake if the given data cannot meet its
     * requirement.
     * </pre>
     *
     * <code>.google.protobuf.Any data = 15;</code>
     */
    public boolean hasData() {
      return data_ != null;
    }
    /**
     * <pre>
     * forge won't touch this field. Only forge app shall handle it.
     * forge app can extend the stake if the given data cannot meet its
     * requirement.
     * </pre>
     *
     * <code>.google.protobuf.Any data = 15;</code>
     */
    public com.google.protobuf.Any getData() {
      return data_ == null ? com.google.protobuf.Any.getDefaultInstance() : data_;
    }
    /**
     * <pre>
     * forge won't touch this field. Only forge app shall handle it.
     * forge app can extend the stake if the given data cannot meet its
     * requirement.
     * </pre>
     *
     * <code>.google.protobuf.Any data = 15;</code>
     */
    public com.google.protobuf.AnyOrBuilder getDataOrBuilder() {
      return getData();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getToBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, to_);
      }
      if (value_ != null) {
        output.writeMessage(2, getValue());
      }
      if (!getMessageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, message_);
      }
      if (data_ != null) {
        output.writeMessage(15, getData());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getToBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, to_);
      }
      if (value_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getValue());
      }
      if (!getMessageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, message_);
      }
      if (data_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, getData());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof forge_abi.Stake.StakeTx)) {
        return super.equals(obj);
      }
      forge_abi.Stake.StakeTx other = (forge_abi.Stake.StakeTx) obj;

      boolean result = true;
      result = result && getTo()
          .equals(other.getTo());
      result = result && (hasValue() == other.hasValue());
      if (hasValue()) {
        result = result && getValue()
            .equals(other.getValue());
      }
      result = result && getMessage()
          .equals(other.getMessage());
      result = result && (hasData() == other.hasData());
      if (hasData()) {
        result = result && getData()
            .equals(other.getData());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TO_FIELD_NUMBER;
      hash = (53 * hash) + getTo().hashCode();
      if (hasValue()) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValue().hashCode();
      }
      hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getMessage().hashCode();
      if (hasData()) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getData().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static forge_abi.Stake.StakeTx parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static forge_abi.Stake.StakeTx parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static forge_abi.Stake.StakeTx parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static forge_abi.Stake.StakeTx parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static forge_abi.Stake.StakeTx parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static forge_abi.Stake.StakeTx parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static forge_abi.Stake.StakeTx parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static forge_abi.Stake.StakeTx parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static forge_abi.Stake.StakeTx parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static forge_abi.Stake.StakeTx parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(forge_abi.Stake.StakeTx prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Here we will reuse DeclareTx to declare a node.
     * DeclareTx could only be carried out by node admin. We will have an RPC
     * to ask forge to use the private key of the node and declare its identity.
     * Then an account state will be created for that node and later on people can
     * stake to that account. The top N staked nodes will be validators in the
     * chain.
     * Once a node is declared, people can use StakeTx to stake its tokens to it
     * minimun staked token is 1. stake could be very flexible, that one can stake
     * for a node, a user, an asset, a chain or a tx hash (normally a vote tx)
     * </pre>
     *
     * Protobuf type {@code forge_abi.StakeTx}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:forge_abi.StakeTx)
        forge_abi.Stake.StakeTxOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return forge_abi.Stake.internal_static_forge_abi_StakeTx_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return forge_abi.Stake.internal_static_forge_abi_StakeTx_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                forge_abi.Stake.StakeTx.class, forge_abi.Stake.StakeTx.Builder.class);
      }

      // Construct using forge_abi.Stake.StakeTx.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        to_ = "";

        if (valueBuilder_ == null) {
          value_ = null;
        } else {
          value_ = null;
          valueBuilder_ = null;
        }
        message_ = "";

        if (dataBuilder_ == null) {
          data_ = null;
        } else {
          data_ = null;
          dataBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return forge_abi.Stake.internal_static_forge_abi_StakeTx_descriptor;
      }

      public forge_abi.Stake.StakeTx getDefaultInstanceForType() {
        return forge_abi.Stake.StakeTx.getDefaultInstance();
      }

      public forge_abi.Stake.StakeTx build() {
        forge_abi.Stake.StakeTx result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public forge_abi.Stake.StakeTx buildPartial() {
        forge_abi.Stake.StakeTx result = new forge_abi.Stake.StakeTx(this);
        result.to_ = to_;
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.message_ = message_;
        if (dataBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof forge_abi.Stake.StakeTx) {
          return mergeFrom((forge_abi.Stake.StakeTx)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(forge_abi.Stake.StakeTx other) {
        if (other == forge_abi.Stake.StakeTx.getDefaultInstance()) return this;
        if (!other.getTo().isEmpty()) {
          to_ = other.to_;
          onChanged();
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        if (!other.getMessage().isEmpty()) {
          message_ = other.message_;
          onChanged();
        }
        if (other.hasData()) {
          mergeData(other.getData());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        forge_abi.Stake.StakeTx parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (forge_abi.Stake.StakeTx) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object to_ = "";
      /**
       * <code>string to = 1;</code>
       */
      public java.lang.String getTo() {
        java.lang.Object ref = to_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          to_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string to = 1;</code>
       */
      public com.google.protobuf.ByteString
          getToBytes() {
        java.lang.Object ref = to_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          to_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string to = 1;</code>
       */
      public Builder setTo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        to_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string to = 1;</code>
       */
      public Builder clearTo() {
        
        to_ = getDefaultInstance().getTo();
        onChanged();
        return this;
      }
      /**
       * <code>string to = 1;</code>
       */
      public Builder setToBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        to_ = value;
        onChanged();
        return this;
      }

      private forge_abi.Type.BigSint value_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          forge_abi.Type.BigSint, forge_abi.Type.BigSint.Builder, forge_abi.Type.BigSintOrBuilder> valueBuilder_;
      /**
       * <code>.forge_abi.BigSint value = 2;</code>
       */
      public boolean hasValue() {
        return valueBuilder_ != null || value_ != null;
      }
      /**
       * <code>.forge_abi.BigSint value = 2;</code>
       */
      public forge_abi.Type.BigSint getValue() {
        if (valueBuilder_ == null) {
          return value_ == null ? forge_abi.Type.BigSint.getDefaultInstance() : value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>.forge_abi.BigSint value = 2;</code>
       */
      public Builder setValue(forge_abi.Type.BigSint value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.forge_abi.BigSint value = 2;</code>
       */
      public Builder setValue(
          forge_abi.Type.BigSint.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.forge_abi.BigSint value = 2;</code>
       */
      public Builder mergeValue(forge_abi.Type.BigSint value) {
        if (valueBuilder_ == null) {
          if (value_ != null) {
            value_ =
              forge_abi.Type.BigSint.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.forge_abi.BigSint value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = null;
          onChanged();
        } else {
          value_ = null;
          valueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.forge_abi.BigSint value = 2;</code>
       */
      public forge_abi.Type.BigSint.Builder getValueBuilder() {
        
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.forge_abi.BigSint value = 2;</code>
       */
      public forge_abi.Type.BigSintOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_ == null ?
              forge_abi.Type.BigSint.getDefaultInstance() : value_;
        }
      }
      /**
       * <code>.forge_abi.BigSint value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          forge_abi.Type.BigSint, forge_abi.Type.BigSint.Builder, forge_abi.Type.BigSintOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              forge_abi.Type.BigSint, forge_abi.Type.BigSint.Builder, forge_abi.Type.BigSintOrBuilder>(
                  getValue(),
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      private java.lang.Object message_ = "";
      /**
       * <code>string message = 3;</code>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string message = 3;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string message = 3;</code>
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string message = 3;</code>
       */
      public Builder clearMessage() {
        
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <code>string message = 3;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        message_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.Any data_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> dataBuilder_;
      /**
       * <pre>
       * forge won't touch this field. Only forge app shall handle it.
       * forge app can extend the stake if the given data cannot meet its
       * requirement.
       * </pre>
       *
       * <code>.google.protobuf.Any data = 15;</code>
       */
      public boolean hasData() {
        return dataBuilder_ != null || data_ != null;
      }
      /**
       * <pre>
       * forge won't touch this field. Only forge app shall handle it.
       * forge app can extend the stake if the given data cannot meet its
       * requirement.
       * </pre>
       *
       * <code>.google.protobuf.Any data = 15;</code>
       */
      public com.google.protobuf.Any getData() {
        if (dataBuilder_ == null) {
          return data_ == null ? com.google.protobuf.Any.getDefaultInstance() : data_;
        } else {
          return dataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * forge won't touch this field. Only forge app shall handle it.
       * forge app can extend the stake if the given data cannot meet its
       * requirement.
       * </pre>
       *
       * <code>.google.protobuf.Any data = 15;</code>
       */
      public Builder setData(com.google.protobuf.Any value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          dataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * forge won't touch this field. Only forge app shall handle it.
       * forge app can extend the stake if the given data cannot meet its
       * requirement.
       * </pre>
       *
       * <code>.google.protobuf.Any data = 15;</code>
       */
      public Builder setData(
          com.google.protobuf.Any.Builder builderForValue) {
        if (dataBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          dataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * forge won't touch this field. Only forge app shall handle it.
       * forge app can extend the stake if the given data cannot meet its
       * requirement.
       * </pre>
       *
       * <code>.google.protobuf.Any data = 15;</code>
       */
      public Builder mergeData(com.google.protobuf.Any value) {
        if (dataBuilder_ == null) {
          if (data_ != null) {
            data_ =
              com.google.protobuf.Any.newBuilder(data_).mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          dataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * forge won't touch this field. Only forge app shall handle it.
       * forge app can extend the stake if the given data cannot meet its
       * requirement.
       * </pre>
       *
       * <code>.google.protobuf.Any data = 15;</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = null;
          onChanged();
        } else {
          data_ = null;
          dataBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * forge won't touch this field. Only forge app shall handle it.
       * forge app can extend the stake if the given data cannot meet its
       * requirement.
       * </pre>
       *
       * <code>.google.protobuf.Any data = 15;</code>
       */
      public com.google.protobuf.Any.Builder getDataBuilder() {
        
        onChanged();
        return getDataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * forge won't touch this field. Only forge app shall handle it.
       * forge app can extend the stake if the given data cannot meet its
       * requirement.
       * </pre>
       *
       * <code>.google.protobuf.Any data = 15;</code>
       */
      public com.google.protobuf.AnyOrBuilder getDataOrBuilder() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilder();
        } else {
          return data_ == null ?
              com.google.protobuf.Any.getDefaultInstance() : data_;
        }
      }
      /**
       * <pre>
       * forge won't touch this field. Only forge app shall handle it.
       * forge app can extend the stake if the given data cannot meet its
       * requirement.
       * </pre>
       *
       * <code>.google.protobuf.Any data = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                  getData(),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:forge_abi.StakeTx)
    }

    // @@protoc_insertion_point(class_scope:forge_abi.StakeTx)
    private static final forge_abi.Stake.StakeTx DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new forge_abi.Stake.StakeTx();
    }

    public static forge_abi.Stake.StakeTx getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StakeTx>
        PARSER = new com.google.protobuf.AbstractParser<StakeTx>() {
      public StakeTx parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new StakeTx(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StakeTx> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StakeTx> getParserForType() {
      return PARSER;
    }

    public forge_abi.Stake.StakeTx getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_forge_abi_stakeForAsset_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_forge_abi_stakeForAsset_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_forge_abi_stakeForChain_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_forge_abi_stakeForChain_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_forge_abi_StakeForNode_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_forge_abi_StakeForNode_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_forge_abi_stakeForUser_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_forge_abi_stakeForUser_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_forge_abi_StakeTx_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_forge_abi_StakeTx_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013stake.proto\022\tforge_abi\032\031google/protobu" +
      "f/any.proto\032\ntype.proto\"\017\n\rstakeForAsset" +
      "\"\017\n\rstakeForChain\"\016\n\014StakeForNode\"\016\n\014sta" +
      "keForUser\"m\n\007StakeTx\022\n\n\002to\030\001 \001(\t\022!\n\005valu" +
      "e\030\002 \001(\0132\022.forge_abi.BigSint\022\017\n\007message\030\003" +
      " \001(\t\022\"\n\004data\030\017 \001(\0132\024.google.protobuf.Any" +
      "b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.AnyProto.getDescriptor(),
          forge_abi.Type.getDescriptor(),
        }, assigner);
    internal_static_forge_abi_stakeForAsset_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_forge_abi_stakeForAsset_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_forge_abi_stakeForAsset_descriptor,
        new java.lang.String[] { });
    internal_static_forge_abi_stakeForChain_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_forge_abi_stakeForChain_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_forge_abi_stakeForChain_descriptor,
        new java.lang.String[] { });
    internal_static_forge_abi_StakeForNode_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_forge_abi_StakeForNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_forge_abi_StakeForNode_descriptor,
        new java.lang.String[] { });
    internal_static_forge_abi_stakeForUser_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_forge_abi_stakeForUser_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_forge_abi_stakeForUser_descriptor,
        new java.lang.String[] { });
    internal_static_forge_abi_StakeTx_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_forge_abi_StakeTx_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_forge_abi_StakeTx_descriptor,
        new java.lang.String[] { "To", "Value", "Message", "Data", });
    com.google.protobuf.AnyProto.getDescriptor();
    forge_abi.Type.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
