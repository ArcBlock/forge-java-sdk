// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: setup_swap.proto

package forge_abi;

public final class SetupSwap {
  private SetupSwap() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SetupSwapTxOrBuilder extends
      // @@protoc_insertion_point(interface_extends:forge_abi.SetupSwapTx)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The amount of token to swap.
     * </pre>
     *
     * <code>.forge_abi.BigUint value = 1;</code>
     */
    boolean hasValue();
    /**
     * <pre>
     * The amount of token to swap.
     * </pre>
     *
     * <code>.forge_abi.BigUint value = 1;</code>
     */
    forge_abi.Type.BigUint getValue();
    /**
     * <pre>
     * The amount of token to swap.
     * </pre>
     *
     * <code>.forge_abi.BigUint value = 1;</code>
     */
    forge_abi.Type.BigUintOrBuilder getValueOrBuilder();

    /**
     * <pre>
     * The addresses of assets to swap.
     * </pre>
     *
     * <code>repeated string assets = 2;</code>
     */
    java.util.List<java.lang.String>
        getAssetsList();
    /**
     * <pre>
     * The addresses of assets to swap.
     * </pre>
     *
     * <code>repeated string assets = 2;</code>
     */
    int getAssetsCount();
    /**
     * <pre>
     * The addresses of assets to swap.
     * </pre>
     *
     * <code>repeated string assets = 2;</code>
     */
    java.lang.String getAssets(int index);
    /**
     * <pre>
     * The addresses of assets to swap.
     * </pre>
     *
     * <code>repeated string assets = 2;</code>
     */
    com.google.protobuf.ByteString
        getAssetsBytes(int index);

    /**
     * <pre>
     * The address of the receiver who is the only one allowed to get the token and assets locktime.
     * </pre>
     *
     * <code>string receiver = 3;</code>
     */
    java.lang.String getReceiver();
    /**
     * <pre>
     * The address of the receiver who is the only one allowed to get the token and assets locktime.
     * </pre>
     *
     * <code>string receiver = 3;</code>
     */
    com.google.protobuf.ByteString
        getReceiverBytes();

    /**
     * <pre>
     * The sha3 value of the random number.
     * </pre>
     *
     * <code>bytes hashlock = 4;</code>
     */
    com.google.protobuf.ByteString getHashlock();

    /**
     * <pre>
     * The height of the block before which the swap is locked.
     * </pre>
     *
     * <code>uint32 locktime = 5;</code>
     */
    int getLocktime();

    /**
     * <pre>
     * forge won't touch this field. Only forge app shall handle it.
     * </pre>
     *
     * <code>.google.protobuf.Any data = 15;</code>
     */
    boolean hasData();
    /**
     * <pre>
     * forge won't touch this field. Only forge app shall handle it.
     * </pre>
     *
     * <code>.google.protobuf.Any data = 15;</code>
     */
    com.google.protobuf.Any getData();
    /**
     * <pre>
     * forge won't touch this field. Only forge app shall handle it.
     * </pre>
     *
     * <code>.google.protobuf.Any data = 15;</code>
     */
    com.google.protobuf.AnyOrBuilder getDataOrBuilder();
  }
  /**
   * Protobuf type {@code forge_abi.SetupSwapTx}
   */
  public  static final class SetupSwapTx extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:forge_abi.SetupSwapTx)
      SetupSwapTxOrBuilder {
    // Use SetupSwapTx.newBuilder() to construct.
    private SetupSwapTx(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SetupSwapTx() {
      assets_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      receiver_ = "";
      hashlock_ = com.google.protobuf.ByteString.EMPTY;
      locktime_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private SetupSwapTx(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              forge_abi.Type.BigUint.Builder subBuilder = null;
              if (value_ != null) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(forge_abi.Type.BigUint.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                assets_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              assets_.add(s);
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              receiver_ = s;
              break;
            }
            case 34: {

              hashlock_ = input.readBytes();
              break;
            }
            case 40: {

              locktime_ = input.readUInt32();
              break;
            }
            case 122: {
              com.google.protobuf.Any.Builder subBuilder = null;
              if (data_ != null) {
                subBuilder = data_.toBuilder();
              }
              data_ = input.readMessage(com.google.protobuf.Any.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(data_);
                data_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          assets_ = assets_.getUnmodifiableView();
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return forge_abi.SetupSwap.internal_static_forge_abi_SetupSwapTx_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return forge_abi.SetupSwap.internal_static_forge_abi_SetupSwapTx_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              forge_abi.SetupSwap.SetupSwapTx.class, forge_abi.SetupSwap.SetupSwapTx.Builder.class);
    }

    private int bitField0_;
    public static final int VALUE_FIELD_NUMBER = 1;
    private forge_abi.Type.BigUint value_;
    /**
     * <pre>
     * The amount of token to swap.
     * </pre>
     *
     * <code>.forge_abi.BigUint value = 1;</code>
     */
    public boolean hasValue() {
      return value_ != null;
    }
    /**
     * <pre>
     * The amount of token to swap.
     * </pre>
     *
     * <code>.forge_abi.BigUint value = 1;</code>
     */
    public forge_abi.Type.BigUint getValue() {
      return value_ == null ? forge_abi.Type.BigUint.getDefaultInstance() : value_;
    }
    /**
     * <pre>
     * The amount of token to swap.
     * </pre>
     *
     * <code>.forge_abi.BigUint value = 1;</code>
     */
    public forge_abi.Type.BigUintOrBuilder getValueOrBuilder() {
      return getValue();
    }

    public static final int ASSETS_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList assets_;
    /**
     * <pre>
     * The addresses of assets to swap.
     * </pre>
     *
     * <code>repeated string assets = 2;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getAssetsList() {
      return assets_;
    }
    /**
     * <pre>
     * The addresses of assets to swap.
     * </pre>
     *
     * <code>repeated string assets = 2;</code>
     */
    public int getAssetsCount() {
      return assets_.size();
    }
    /**
     * <pre>
     * The addresses of assets to swap.
     * </pre>
     *
     * <code>repeated string assets = 2;</code>
     */
    public java.lang.String getAssets(int index) {
      return assets_.get(index);
    }
    /**
     * <pre>
     * The addresses of assets to swap.
     * </pre>
     *
     * <code>repeated string assets = 2;</code>
     */
    public com.google.protobuf.ByteString
        getAssetsBytes(int index) {
      return assets_.getByteString(index);
    }

    public static final int RECEIVER_FIELD_NUMBER = 3;
    private volatile java.lang.Object receiver_;
    /**
     * <pre>
     * The address of the receiver who is the only one allowed to get the token and assets locktime.
     * </pre>
     *
     * <code>string receiver = 3;</code>
     */
    public java.lang.String getReceiver() {
      java.lang.Object ref = receiver_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        receiver_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The address of the receiver who is the only one allowed to get the token and assets locktime.
     * </pre>
     *
     * <code>string receiver = 3;</code>
     */
    public com.google.protobuf.ByteString
        getReceiverBytes() {
      java.lang.Object ref = receiver_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        receiver_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HASHLOCK_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString hashlock_;
    /**
     * <pre>
     * The sha3 value of the random number.
     * </pre>
     *
     * <code>bytes hashlock = 4;</code>
     */
    public com.google.protobuf.ByteString getHashlock() {
      return hashlock_;
    }

    public static final int LOCKTIME_FIELD_NUMBER = 5;
    private int locktime_;
    /**
     * <pre>
     * The height of the block before which the swap is locked.
     * </pre>
     *
     * <code>uint32 locktime = 5;</code>
     */
    public int getLocktime() {
      return locktime_;
    }

    public static final int DATA_FIELD_NUMBER = 15;
    private com.google.protobuf.Any data_;
    /**
     * <pre>
     * forge won't touch this field. Only forge app shall handle it.
     * </pre>
     *
     * <code>.google.protobuf.Any data = 15;</code>
     */
    public boolean hasData() {
      return data_ != null;
    }
    /**
     * <pre>
     * forge won't touch this field. Only forge app shall handle it.
     * </pre>
     *
     * <code>.google.protobuf.Any data = 15;</code>
     */
    public com.google.protobuf.Any getData() {
      return data_ == null ? com.google.protobuf.Any.getDefaultInstance() : data_;
    }
    /**
     * <pre>
     * forge won't touch this field. Only forge app shall handle it.
     * </pre>
     *
     * <code>.google.protobuf.Any data = 15;</code>
     */
    public com.google.protobuf.AnyOrBuilder getDataOrBuilder() {
      return getData();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (value_ != null) {
        output.writeMessage(1, getValue());
      }
      for (int i = 0; i < assets_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, assets_.getRaw(i));
      }
      if (!getReceiverBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, receiver_);
      }
      if (!hashlock_.isEmpty()) {
        output.writeBytes(4, hashlock_);
      }
      if (locktime_ != 0) {
        output.writeUInt32(5, locktime_);
      }
      if (data_ != null) {
        output.writeMessage(15, getData());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (value_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getValue());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < assets_.size(); i++) {
          dataSize += computeStringSizeNoTag(assets_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getAssetsList().size();
      }
      if (!getReceiverBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, receiver_);
      }
      if (!hashlock_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, hashlock_);
      }
      if (locktime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, locktime_);
      }
      if (data_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, getData());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof forge_abi.SetupSwap.SetupSwapTx)) {
        return super.equals(obj);
      }
      forge_abi.SetupSwap.SetupSwapTx other = (forge_abi.SetupSwap.SetupSwapTx) obj;

      boolean result = true;
      result = result && (hasValue() == other.hasValue());
      if (hasValue()) {
        result = result && getValue()
            .equals(other.getValue());
      }
      result = result && getAssetsList()
          .equals(other.getAssetsList());
      result = result && getReceiver()
          .equals(other.getReceiver());
      result = result && getHashlock()
          .equals(other.getHashlock());
      result = result && (getLocktime()
          == other.getLocktime());
      result = result && (hasData() == other.hasData());
      if (hasData()) {
        result = result && getData()
            .equals(other.getData());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasValue()) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValue().hashCode();
      }
      if (getAssetsCount() > 0) {
        hash = (37 * hash) + ASSETS_FIELD_NUMBER;
        hash = (53 * hash) + getAssetsList().hashCode();
      }
      hash = (37 * hash) + RECEIVER_FIELD_NUMBER;
      hash = (53 * hash) + getReceiver().hashCode();
      hash = (37 * hash) + HASHLOCK_FIELD_NUMBER;
      hash = (53 * hash) + getHashlock().hashCode();
      hash = (37 * hash) + LOCKTIME_FIELD_NUMBER;
      hash = (53 * hash) + getLocktime();
      if (hasData()) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getData().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static forge_abi.SetupSwap.SetupSwapTx parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static forge_abi.SetupSwap.SetupSwapTx parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static forge_abi.SetupSwap.SetupSwapTx parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static forge_abi.SetupSwap.SetupSwapTx parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static forge_abi.SetupSwap.SetupSwapTx parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static forge_abi.SetupSwap.SetupSwapTx parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static forge_abi.SetupSwap.SetupSwapTx parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static forge_abi.SetupSwap.SetupSwapTx parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static forge_abi.SetupSwap.SetupSwapTx parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static forge_abi.SetupSwap.SetupSwapTx parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(forge_abi.SetupSwap.SetupSwapTx prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code forge_abi.SetupSwapTx}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:forge_abi.SetupSwapTx)
        forge_abi.SetupSwap.SetupSwapTxOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return forge_abi.SetupSwap.internal_static_forge_abi_SetupSwapTx_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return forge_abi.SetupSwap.internal_static_forge_abi_SetupSwapTx_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                forge_abi.SetupSwap.SetupSwapTx.class, forge_abi.SetupSwap.SetupSwapTx.Builder.class);
      }

      // Construct using forge_abi.SetupSwap.SetupSwapTx.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (valueBuilder_ == null) {
          value_ = null;
        } else {
          value_ = null;
          valueBuilder_ = null;
        }
        assets_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        receiver_ = "";

        hashlock_ = com.google.protobuf.ByteString.EMPTY;

        locktime_ = 0;

        if (dataBuilder_ == null) {
          data_ = null;
        } else {
          data_ = null;
          dataBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return forge_abi.SetupSwap.internal_static_forge_abi_SetupSwapTx_descriptor;
      }

      public forge_abi.SetupSwap.SetupSwapTx getDefaultInstanceForType() {
        return forge_abi.SetupSwap.SetupSwapTx.getDefaultInstance();
      }

      public forge_abi.SetupSwap.SetupSwapTx build() {
        forge_abi.SetupSwap.SetupSwapTx result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public forge_abi.SetupSwap.SetupSwapTx buildPartial() {
        forge_abi.SetupSwap.SetupSwapTx result = new forge_abi.SetupSwap.SetupSwapTx(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          assets_ = assets_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.assets_ = assets_;
        result.receiver_ = receiver_;
        result.hashlock_ = hashlock_;
        result.locktime_ = locktime_;
        if (dataBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof forge_abi.SetupSwap.SetupSwapTx) {
          return mergeFrom((forge_abi.SetupSwap.SetupSwapTx)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(forge_abi.SetupSwap.SetupSwapTx other) {
        if (other == forge_abi.SetupSwap.SetupSwapTx.getDefaultInstance()) return this;
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        if (!other.assets_.isEmpty()) {
          if (assets_.isEmpty()) {
            assets_ = other.assets_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureAssetsIsMutable();
            assets_.addAll(other.assets_);
          }
          onChanged();
        }
        if (!other.getReceiver().isEmpty()) {
          receiver_ = other.receiver_;
          onChanged();
        }
        if (other.getHashlock() != com.google.protobuf.ByteString.EMPTY) {
          setHashlock(other.getHashlock());
        }
        if (other.getLocktime() != 0) {
          setLocktime(other.getLocktime());
        }
        if (other.hasData()) {
          mergeData(other.getData());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        forge_abi.SetupSwap.SetupSwapTx parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (forge_abi.SetupSwap.SetupSwapTx) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private forge_abi.Type.BigUint value_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          forge_abi.Type.BigUint, forge_abi.Type.BigUint.Builder, forge_abi.Type.BigUintOrBuilder> valueBuilder_;
      /**
       * <pre>
       * The amount of token to swap.
       * </pre>
       *
       * <code>.forge_abi.BigUint value = 1;</code>
       */
      public boolean hasValue() {
        return valueBuilder_ != null || value_ != null;
      }
      /**
       * <pre>
       * The amount of token to swap.
       * </pre>
       *
       * <code>.forge_abi.BigUint value = 1;</code>
       */
      public forge_abi.Type.BigUint getValue() {
        if (valueBuilder_ == null) {
          return value_ == null ? forge_abi.Type.BigUint.getDefaultInstance() : value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The amount of token to swap.
       * </pre>
       *
       * <code>.forge_abi.BigUint value = 1;</code>
       */
      public Builder setValue(forge_abi.Type.BigUint value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The amount of token to swap.
       * </pre>
       *
       * <code>.forge_abi.BigUint value = 1;</code>
       */
      public Builder setValue(
          forge_abi.Type.BigUint.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The amount of token to swap.
       * </pre>
       *
       * <code>.forge_abi.BigUint value = 1;</code>
       */
      public Builder mergeValue(forge_abi.Type.BigUint value) {
        if (valueBuilder_ == null) {
          if (value_ != null) {
            value_ =
              forge_abi.Type.BigUint.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The amount of token to swap.
       * </pre>
       *
       * <code>.forge_abi.BigUint value = 1;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = null;
          onChanged();
        } else {
          value_ = null;
          valueBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The amount of token to swap.
       * </pre>
       *
       * <code>.forge_abi.BigUint value = 1;</code>
       */
      public forge_abi.Type.BigUint.Builder getValueBuilder() {
        
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The amount of token to swap.
       * </pre>
       *
       * <code>.forge_abi.BigUint value = 1;</code>
       */
      public forge_abi.Type.BigUintOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_ == null ?
              forge_abi.Type.BigUint.getDefaultInstance() : value_;
        }
      }
      /**
       * <pre>
       * The amount of token to swap.
       * </pre>
       *
       * <code>.forge_abi.BigUint value = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          forge_abi.Type.BigUint, forge_abi.Type.BigUint.Builder, forge_abi.Type.BigUintOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              forge_abi.Type.BigUint, forge_abi.Type.BigUint.Builder, forge_abi.Type.BigUintOrBuilder>(
                  getValue(),
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      private com.google.protobuf.LazyStringList assets_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureAssetsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          assets_ = new com.google.protobuf.LazyStringArrayList(assets_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * The addresses of assets to swap.
       * </pre>
       *
       * <code>repeated string assets = 2;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getAssetsList() {
        return assets_.getUnmodifiableView();
      }
      /**
       * <pre>
       * The addresses of assets to swap.
       * </pre>
       *
       * <code>repeated string assets = 2;</code>
       */
      public int getAssetsCount() {
        return assets_.size();
      }
      /**
       * <pre>
       * The addresses of assets to swap.
       * </pre>
       *
       * <code>repeated string assets = 2;</code>
       */
      public java.lang.String getAssets(int index) {
        return assets_.get(index);
      }
      /**
       * <pre>
       * The addresses of assets to swap.
       * </pre>
       *
       * <code>repeated string assets = 2;</code>
       */
      public com.google.protobuf.ByteString
          getAssetsBytes(int index) {
        return assets_.getByteString(index);
      }
      /**
       * <pre>
       * The addresses of assets to swap.
       * </pre>
       *
       * <code>repeated string assets = 2;</code>
       */
      public Builder setAssets(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAssetsIsMutable();
        assets_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The addresses of assets to swap.
       * </pre>
       *
       * <code>repeated string assets = 2;</code>
       */
      public Builder addAssets(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAssetsIsMutable();
        assets_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The addresses of assets to swap.
       * </pre>
       *
       * <code>repeated string assets = 2;</code>
       */
      public Builder addAllAssets(
          java.lang.Iterable<java.lang.String> values) {
        ensureAssetsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, assets_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The addresses of assets to swap.
       * </pre>
       *
       * <code>repeated string assets = 2;</code>
       */
      public Builder clearAssets() {
        assets_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The addresses of assets to swap.
       * </pre>
       *
       * <code>repeated string assets = 2;</code>
       */
      public Builder addAssetsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureAssetsIsMutable();
        assets_.add(value);
        onChanged();
        return this;
      }

      private java.lang.Object receiver_ = "";
      /**
       * <pre>
       * The address of the receiver who is the only one allowed to get the token and assets locktime.
       * </pre>
       *
       * <code>string receiver = 3;</code>
       */
      public java.lang.String getReceiver() {
        java.lang.Object ref = receiver_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          receiver_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The address of the receiver who is the only one allowed to get the token and assets locktime.
       * </pre>
       *
       * <code>string receiver = 3;</code>
       */
      public com.google.protobuf.ByteString
          getReceiverBytes() {
        java.lang.Object ref = receiver_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          receiver_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The address of the receiver who is the only one allowed to get the token and assets locktime.
       * </pre>
       *
       * <code>string receiver = 3;</code>
       */
      public Builder setReceiver(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        receiver_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The address of the receiver who is the only one allowed to get the token and assets locktime.
       * </pre>
       *
       * <code>string receiver = 3;</code>
       */
      public Builder clearReceiver() {
        
        receiver_ = getDefaultInstance().getReceiver();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The address of the receiver who is the only one allowed to get the token and assets locktime.
       * </pre>
       *
       * <code>string receiver = 3;</code>
       */
      public Builder setReceiverBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        receiver_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString hashlock_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * The sha3 value of the random number.
       * </pre>
       *
       * <code>bytes hashlock = 4;</code>
       */
      public com.google.protobuf.ByteString getHashlock() {
        return hashlock_;
      }
      /**
       * <pre>
       * The sha3 value of the random number.
       * </pre>
       *
       * <code>bytes hashlock = 4;</code>
       */
      public Builder setHashlock(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        hashlock_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The sha3 value of the random number.
       * </pre>
       *
       * <code>bytes hashlock = 4;</code>
       */
      public Builder clearHashlock() {
        
        hashlock_ = getDefaultInstance().getHashlock();
        onChanged();
        return this;
      }

      private int locktime_ ;
      /**
       * <pre>
       * The height of the block before which the swap is locked.
       * </pre>
       *
       * <code>uint32 locktime = 5;</code>
       */
      public int getLocktime() {
        return locktime_;
      }
      /**
       * <pre>
       * The height of the block before which the swap is locked.
       * </pre>
       *
       * <code>uint32 locktime = 5;</code>
       */
      public Builder setLocktime(int value) {
        
        locktime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The height of the block before which the swap is locked.
       * </pre>
       *
       * <code>uint32 locktime = 5;</code>
       */
      public Builder clearLocktime() {
        
        locktime_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Any data_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> dataBuilder_;
      /**
       * <pre>
       * forge won't touch this field. Only forge app shall handle it.
       * </pre>
       *
       * <code>.google.protobuf.Any data = 15;</code>
       */
      public boolean hasData() {
        return dataBuilder_ != null || data_ != null;
      }
      /**
       * <pre>
       * forge won't touch this field. Only forge app shall handle it.
       * </pre>
       *
       * <code>.google.protobuf.Any data = 15;</code>
       */
      public com.google.protobuf.Any getData() {
        if (dataBuilder_ == null) {
          return data_ == null ? com.google.protobuf.Any.getDefaultInstance() : data_;
        } else {
          return dataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * forge won't touch this field. Only forge app shall handle it.
       * </pre>
       *
       * <code>.google.protobuf.Any data = 15;</code>
       */
      public Builder setData(com.google.protobuf.Any value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          dataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * forge won't touch this field. Only forge app shall handle it.
       * </pre>
       *
       * <code>.google.protobuf.Any data = 15;</code>
       */
      public Builder setData(
          com.google.protobuf.Any.Builder builderForValue) {
        if (dataBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          dataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * forge won't touch this field. Only forge app shall handle it.
       * </pre>
       *
       * <code>.google.protobuf.Any data = 15;</code>
       */
      public Builder mergeData(com.google.protobuf.Any value) {
        if (dataBuilder_ == null) {
          if (data_ != null) {
            data_ =
              com.google.protobuf.Any.newBuilder(data_).mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          dataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * forge won't touch this field. Only forge app shall handle it.
       * </pre>
       *
       * <code>.google.protobuf.Any data = 15;</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = null;
          onChanged();
        } else {
          data_ = null;
          dataBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * forge won't touch this field. Only forge app shall handle it.
       * </pre>
       *
       * <code>.google.protobuf.Any data = 15;</code>
       */
      public com.google.protobuf.Any.Builder getDataBuilder() {
        
        onChanged();
        return getDataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * forge won't touch this field. Only forge app shall handle it.
       * </pre>
       *
       * <code>.google.protobuf.Any data = 15;</code>
       */
      public com.google.protobuf.AnyOrBuilder getDataOrBuilder() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilder();
        } else {
          return data_ == null ?
              com.google.protobuf.Any.getDefaultInstance() : data_;
        }
      }
      /**
       * <pre>
       * forge won't touch this field. Only forge app shall handle it.
       * </pre>
       *
       * <code>.google.protobuf.Any data = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                  getData(),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:forge_abi.SetupSwapTx)
    }

    // @@protoc_insertion_point(class_scope:forge_abi.SetupSwapTx)
    private static final forge_abi.SetupSwap.SetupSwapTx DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new forge_abi.SetupSwap.SetupSwapTx();
    }

    public static forge_abi.SetupSwap.SetupSwapTx getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SetupSwapTx>
        PARSER = new com.google.protobuf.AbstractParser<SetupSwapTx>() {
      public SetupSwapTx parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SetupSwapTx(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SetupSwapTx> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SetupSwapTx> getParserForType() {
      return PARSER;
    }

    public forge_abi.SetupSwap.SetupSwapTx getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_forge_abi_SetupSwapTx_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_forge_abi_SetupSwapTx_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020setup_swap.proto\022\tforge_abi\032\031google/pr" +
      "otobuf/any.proto\032\ntype.proto\032\013state.prot" +
      "o\"\232\001\n\013SetupSwapTx\022!\n\005value\030\001 \001(\0132\022.forge" +
      "_abi.BigUint\022\016\n\006assets\030\002 \003(\t\022\020\n\010receiver" +
      "\030\003 \001(\t\022\020\n\010hashlock\030\004 \001(\014\022\020\n\010locktime\030\005 \001" +
      "(\r\022\"\n\004data\030\017 \001(\0132\024.google.protobuf.Anyb\006" +
      "proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.AnyProto.getDescriptor(),
          forge_abi.Type.getDescriptor(),
          forge_abi.State.getDescriptor(),
        }, assigner);
    internal_static_forge_abi_SetupSwapTx_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_forge_abi_SetupSwapTx_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_forge_abi_SetupSwapTx_descriptor,
        new java.lang.String[] { "Value", "Assets", "Receiver", "Hashlock", "Locktime", "Data", });
    com.google.protobuf.AnyProto.getDescriptor();
    forge_abi.Type.getDescriptor();
    forge_abi.State.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
